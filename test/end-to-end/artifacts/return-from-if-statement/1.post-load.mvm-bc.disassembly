Bytecode size: 259 B

Ofst Addr    Size
==== ==== =======
0000        44  - # Header
0000            1     bytecodeVersion: 1
0001            1     headerSize: 44
0002            2     bytecodeSize: 259
0004            2     expectedCRC: d6d5
0006            2     requiredEngineVersion: 0
0008            4     requiredFeatureFlags: 1
000c            2     globalVariableCount: 3
000e            2     initialDataOffset: 002c
0010            2     initialDataSize: 6
0012            2     initialHeapOffset: 0032
0014            2     initialHeapSize: 20
0016            2     gcRootsOffset: 0046
0018            2     gcRootsCount: 0
001a            2     importTableOffset: 0046
001c            2     importTableSize: 4
001e            2     exportTableOffset: 004a
0020            2     exportTableSize: 4
0022            2     shortCallTableOffset: 004e
0024            2     shortCallTableSize: 0
0026            2     stringTableOffset: 004e
0028            2     stringTableSize: 4
002a            2     arrayProtoPointer: &4002
002c 8000    6  - # Globals
002c 8000       2     [0]: &c054
002e 8002       2     [1]: &400c
0030 8004       2     [2]: &c0cc
0032 4000   20  - # GC allocations
0032 4000       2     Header [Size: 2, Type: TC_REF_PROPERTY_LIST]
0034 4002    2  -     # Object as TsPropertyList
0034 4002       2         first: &4004
0036 4004    6  -     # TsPropertyCell
0036 4004       2         next: &0000
0038 4006       2         key: &c058
003a 4008       2         value: &c0a1
003c 400a       2     Header [Size: 2, Type: TC_REF_PROPERTY_LIST]
003e 400c    2  -     # Object as TsPropertyList
003e 400c       2         first: &400e
0040 400e    6  -     # TsPropertyCell
0040 400e       2         next: &0000
0042 4010       2         key: &c05f
0044 4012       2         value: &c065
0046 c046    4  - # Import Table
0046 c046       2     [0]: 3
0048 c048       2     [1]: 1
004a c04a    4  - # Export Table
004a c04a       4     [0]: &c0b1
004e c04e    4  - # String Table
004e c04e       2     [0]: &c05f
0050 c050       2     [1]: &c058
0052 c052  177  - # ROM allocations
0052 c052       2     Header [Size: 2, Type: TC_REF_HOST_FUNC]
0054 c054       2     Value: Import Table [0] (&c046)
0056 c056       2     Header [Size: 5, Type: TC_REF_UNIQUE_STRING]
0058 c058       5     Value: 'push'
005d c05d       2     Header [Size: 4, Type: TC_REF_UNIQUE_STRING]
005f c05f       4     Value: 'log'
0063 c063       2     Header [Size: 2, Type: TC_REF_HOST_FUNC]
0065 c065       2     Value: Import Table [1] (&c048)
0067 c067       2     Header [Size: 15, Type: TC_REF_UNIQUE_STRING]
0069 c069      15     Value: 'Alternate path'
0078 c078       2     Header [Size: 16, Type: TC_REF_UNIQUE_STRING]
007a c07a      16     Value: 'Consequent path'
008a c08a      21     <unused>
009f c09f       2     Header [Size: 14, Type: TC_REF_FUNCTION]
00a1 c0a1   14  -     # Function <builtin>:Array_push
00a1 c0a1       1         maxStackDepth: 5
00a2 c0a2   13  -         # Block entry
00a2 c0a2       1             LoadArg(index 1)
00a3 c0a3       1             LoadVar(index 0)
00a4 c0a4       1             LoadArg(index 0)
00a5 c0a5       1             LoadArg(index 0)
00a6 c0a6       3             Literal('length')
00a9 c0a9       1             ObjectGet()
00aa c0aa       1             LoadVar(index 1)
00ab c0ab       1             ObjectSet()
00ac c0ac       1             Pop(count 1)
00ad c0ad       1             Literal(lit undefined)
00ae c0ae       1             Return()
00af c0af       2     Header [Size: 25, Type: TC_REF_FUNCTION]
00b1 c0b1   25  -     # Function ./test/end-to-end/tests/return-from-if-statement.test.mvms:run
00b1 c0b1       1         maxStackDepth: 5
00b2 c0b2   24  -         # Block entry
00b2 c0b2       1             LoadGlobal [0]
00b3 c0b3       1             Literal(lit undefined)
00b4 c0b4       1             LoadGlobal [2]
00b5 c0b5       1             Literal(lit undefined)
00b6 c0b6       1             Literal(lit true)
00b7 c0b7       2             Call(count 2)
00b9 c0b9       1             Literal(lit 1)
00ba c0ba       2             Call(count 3)
00bc c0bc       1             Pop(count 1)
00bd c0bd       1             LoadGlobal [0]
00be c0be       1             Literal(lit undefined)
00bf c0bf       1             LoadGlobal [2]
00c0 c0c0       1             Literal(lit undefined)
00c1 c0c1       1             Literal(lit false)
00c2 c0c2       2             Call(count 2)
00c4 c0c4       1             Literal(lit 2)
00c5 c0c5       2             Call(count 3)
00c7 c0c7       1             Pop(count 1)
00c8 c0c8       1             Literal(lit undefined)
00c9 c0c9       1             Return()
00ca c0ca       2     Header [Size: 55, Type: TC_REF_FUNCTION]
00cc c0cc   55  -     # Function ./test/end-to-end/tests/return-from-if-statement.test.mvms:foo
00cc c0cc       1         maxStackDepth: 5
00cd c0cd    4  -         # Block entry
00cd c0cd       1             LoadArg(index 1)
00ce c0ce       1             LoadVar(index 0)
00cf c0cf       2             Branch &c0e1
00d1 c0d1   16  -         # Block block2
00d1 c0d1       1             LoadGlobal [1]
00d2 c0d2       1             LoadVar(index 1)
00d3 c0d3       3             Literal(&c05f)
00d6 c0d6       1             ObjectGet()
00d7 c0d7       1             LoadVar(index 1)
00d8 c0d8       3             Literal(&c069)
00db c0db       2             Call(count 2)
00dd c0dd       1             StoreVar(index 1)
00de c0de       1             Pop(count 1)
00df c0df       1             Literal(lit 2)
00e0 c0e0       1             Return()
00e1 c0e1   16  -         # Block block1
00e1 c0e1       1             LoadGlobal [1]
00e2 c0e2       1             LoadVar(index 1)
00e3 c0e3       3             Literal(&c05f)
00e6 c0e6       1             ObjectGet()
00e7 c0e7       1             LoadVar(index 1)
00e8 c0e8       3             Literal(&c07a)
00eb c0eb       2             Call(count 2)
00ed c0ed       1             StoreVar(index 1)
00ee c0ee       1             Pop(count 1)
00ef c0ef       1             Literal(lit 1)
00f0 c0f0       1             Return()
0103 c103      18         <unused>