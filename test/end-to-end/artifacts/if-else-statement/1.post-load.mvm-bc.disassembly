Bytecode size: 234 B

Addr    Size
==== =======
0000   1c  - # Header
0000       1     bytecodeVersion: 7
0001       1     headerSize: 28
0002       1     requiredEngineVersion: 7
0003       1     reserved: 0
0004       2     bytecodeSize: 234
0006       2     expectedCRC: fa72
0008       4     requiredFeatureFlags: 3
000c       2     BCS_IMPORT_TABLE: 001c
000e       2     BCS_EXPORT_TABLE: 001e
0010       2     BCS_SHORT_CALL_TABLE: 0022
0012       2     BCS_BUILTINS: 0022
0014       2     BCS_STRING_TABLE: 002e
0016       2     BCS_ROM: 0036
0018       2     BCS_GLOBALS: 00e4
001a       2     BCS_HEAP: 00ea
001c    2  - # Import Table
001c       2     [0]: 1
001e    4  - # Export Table
001e       4     [0]: &00b4
0022    c  - # Builtins
0022       2     [BIN_INTERNED_STRINGS]: &00e8
0024       2     [BIN_ARRAY_PROTO]: undefined
0026       2     [BIN_STR_PROTOTYPE]: undefined
0028       2     [BIN_ASYNC_COMPLETE]: undefined
002a       2     [BIN_ASYNC_CATCH_BLOCK]: undefined
002c       2     [BIN_ASYNC_HOST_CALLBACK]: undefined
002e    8  - # String Table
002e       2     [0]: &0058
0030       2     [1]: &0038
0032       2     [2]: &0094
0034       2     [3]: &0074
0036   ae  - # ROM allocations
0036       2     Header [Size: 27, Type: TC_REF_INTERNED_STRING]
0038      1b     Value: '#1: This is the consequent'
0053       3     <unused>
0056       2     Header [Size: 26, Type: TC_REF_INTERNED_STRING]
0058      1a     Value: '#1: This is the alternate'
0072       2     Header [Size: 27, Type: TC_REF_INTERNED_STRING]
0074      1b     Value: '#2: This is the consequent'
008f       3     <unused>
0092       2     Header [Size: 26, Type: TC_REF_INTERNED_STRING]
0094      1a     Value: '#2: This is the alternate'
00ae       2     Header [Size: 2, Type: TC_REF_HOST_FUNC]
00b0       2     Value: Import Table [0] (&001c)
00b2       2     Header [Size: 3, Type: TC_REF_FUNCTION]
00b4   30  -     # Function run
00b4       0         maxStackDepth: 3
00b4       0         isContinuation: 0
00b4    3  -         # Block entry
00b4       1             Literal(lit false)
00b5       2             Branch &00ce
00b7    9  -         # Block block2
00b7       3             LoadGlobal [0]
00ba       1             Literal(lit undefined)
00bb       3             Literal(&0058)
00be       2             Call(count 2, flag true)
00c0       0             <implicit fallthrough>
00c0    3  -         # Block block3
00c0       1             Literal(lit true)
00c1       2             Branch &00d9
00c3    9  -         # Block block5
00c3       3             LoadGlobal [0]
00c6       1             Literal(lit undefined)
00c7       3             Literal(&0094)
00ca       2             Call(count 2, flag true)
00cc       0             <implicit fallthrough>
00cc    2  -         # Block block6
00cc       1             Literal(lit undefined)
00cd       1             Return()
00ce    b  -         # Block block1
00ce       3             LoadGlobal [0]
00d1       1             Literal(lit undefined)
00d2       3             Literal(&0038)
00d5       2             Call(count 2, flag true)
00d7       2             Jump &00c0
00d9    b  -         # Block block4
00d9       3             LoadGlobal [0]
00dc       1             Literal(lit undefined)
00dd       3             Literal(&0074)
00e0       2             Call(count 2, flag true)
00e2       2             Jump &00cc
00e4    6  - # Globals
00e4       2     [0]: &00b0
00e6       2     [1]: deleted
00e8       2     Handle: undefined