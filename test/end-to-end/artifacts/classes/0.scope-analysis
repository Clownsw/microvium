[this module slot] 'thisModule'; [global slot] 'thisModule'

module with entry 'moduleEntry' {
  [no closure scope]; [0 var declarations]

  bindings { class 'MyClass' # binding_1 @ local[0] }

  No references

  prologue { new let -> local[0] }

  class MyClass with {
    bindings {  }

    prologue {  }

    epilogue {  }

    No references

    block {
      sameLifetimeAsParent: true

      bindings { this '#this' # binding_2 @ arg[0] }

      prologue {  }

      epilogue {  }

      No references
    }

    function MyClass as 'MyClass' {
      [no closure scope]; [0 var declarations]

      bindings { this '#this' # binding_3 @ arg[0] }

      No references

      prologue {  }

      block {
        sameLifetimeAsParent: true

        bindings { param 'y' # binding_4 @ arg[1] }

        prologue {  }

        epilogue {  }

        No references

        block {
          sameLifetimeAsParent: true

          bindings {  }

          prologue {  }

          epilogue {  }

          references { '#this' @ binding_3; y @ binding_4 }
        }
      }
    }
  }
}