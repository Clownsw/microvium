[this module slot] 'thisModule'
[free var] 'vmExport'; [free var] 'assertEqual'
[global slot] 'thisModule'
[global slot] 'MyClass'
[global slot] 'inst1'

module with entry 'moduleEntry' {
  [no closure scope]; [0 var declarations]

  bindings {
    class 'MyClass' # binding_1 @ global['MyClass'];
    readonly const 'inst1' # binding_2 @ global['inst1'];
    function 'run' # binding_3 @ local[0]
  }

  references {
    vmExport @ free vmExport
    run @ binding_3
    MyClass @ binding_1
  }

  prologue { func 'run' -> local[0] }

  class MyClass with constructor 'MyClass' {
    bindings {  }

    prologue {  }

    epilogue {  }

    No references

    function MyClass_constructor as 'MyClass_constructor' {
      [no closure scope]; [0 var declarations]

      bindings {
        this '#this' # binding_4 @ arg[0];
        param 'y' # binding_5 @ arg[1]
      }

      No references

      prologue {  }

      block {
        sameLifetimeAsParent: true

        bindings {  }

        prologue {  }

        epilogue {  }

        references { '#this' @ binding_4; y @ binding_5 }
      }
    }

    function MyClass_myMethod as 'MyClass_myMethod' {
      [no closure scope]; [0 var declarations]

      bindings { this '#this' # binding_6 @ arg[0] }

      No references

      prologue {  }

      block {
        sameLifetimeAsParent: true

        bindings {  }

        prologue {  }

        epilogue {  }

        references { '#this' @ binding_6 }
      }
    }
  }

  function run as 'run' {
    [no closure scope]; [0 var declarations]

    bindings { this '#this' # binding_7 @ arg[0] }

    No references

    prologue {  }

    block {
      sameLifetimeAsParent: true

      bindings {
        readonly const 'inst2' # binding_8 @ local[0]
      }

      prologue { new let -> local[0] }

      epilogue { Pop(1) }

      references {
        assertEqual @ free assertEqual
        inst1 @ binding_2
        assertEqual @ free assertEqual
        inst1 @ binding_2
        assertEqual @ free assertEqual
        inst1 @ binding_2
        MyClass @ binding_1
      }
    }
  }
}