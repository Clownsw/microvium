[this module slot] 'thisModule'
[free var] 'vmExport'
[free var] 'assertEqual'
[free var] 'overflowChecks'
[global slot] 'thisModule'

module with entry 'moduleEntry' {
  [no closure scope]; [0 var declarations]

  bindings { function 'run' # binding_1 @ local[0] }

  references { vmExport @ free vmExport; run @ binding_1 }

  prologue { func 'run' -> local[0] }

  function run as 'run' {
    [no closure scope]; [0 var declarations]

    bindings { this '#this' # binding_2 @ arg[0] }

    No references

    prologue {  }

    block {
      sameLifetimeAsParent: true

      bindings {  }

      prologue {  }

      epilogue {  }

      references {
        assertEqual @ free assertEqual
        assertEqual @ free assertEqual
        assertEqual @ free assertEqual
        assertEqual @ free assertEqual
        assertEqual @ free assertEqual
        assertEqual @ free assertEqual
        assertEqual @ free assertEqual
        assertEqual @ free assertEqual
        assertEqual @ free assertEqual
        assertEqual @ free assertEqual
        assertEqual @ free assertEqual
        assertEqual @ free assertEqual
        assertEqual @ free assertEqual
        assertEqual @ free assertEqual
        overflowChecks @ free overflowChecks
        assertEqual @ free assertEqual
        assertEqual @ free assertEqual
        assertEqual @ free assertEqual
        assertEqual @ free assertEqual
        assertEqual @ free assertEqual
        assertEqual @ free assertEqual
        assertEqual @ free assertEqual
        assertEqual @ free assertEqual
        assertEqual @ free assertEqual
        assertEqual @ free assertEqual
        assertEqual @ free assertEqual
      }
    }
  }
}