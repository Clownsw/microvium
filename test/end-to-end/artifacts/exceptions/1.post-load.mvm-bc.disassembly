Bytecode size: 2778 B

Addr    Size
==== =======
0000   1c  - # Header
0000       1     bytecodeVersion: 7
0001       1     headerSize: 28
0002       1     requiredEngineVersion: 7
0003       1     reserved: 0
0004       2     bytecodeSize: 2778
0006       2     expectedCRC: c671
0008       4     requiredFeatureFlags: 3
000c       2     BCS_IMPORT_TABLE: 001c
000e       2     BCS_EXPORT_TABLE: 0020
0010       2     BCS_SHORT_CALL_TABLE: 0024
0012       2     BCS_BUILTINS: 0024
0014       2     BCS_STRING_TABLE: 0030
0016       2     BCS_ROM: 0098
0018       2     BCS_GLOBALS: 0ab0
001a       2     BCS_HEAP: 0ada
001c    4  - # Import Table
001c       2     [0]: 1
001e       2     [1]: 3
0020    4  - # Export Table
0020       4     [0]: &03b0
0024    c  - # Builtins
0024       2     [BIN_INTERNED_STRINGS]: &0ad8
0026       2     [BIN_ARRAY_PROTO]: undefined
0028       2     [BIN_STR_PROTOTYPE]: undefined
002a       2     [BIN_ASYNC_COMPLETE]: undefined
002c       2     [BIN_ASYNC_CATCH_BLOCK]: undefined
002e       2     [BIN_ASYNC_HOST_CALLBACK]: undefined
0030   68  - # String Table
0030       2     [0]: &00bc
0032       2     [1]: &0110
0034       2     [2]: &00a4
0036       2     [3]: &0148
0038       2     [4]: &0154
003a       2     [5]: &01a0
003c       2     [6]: &01ac
003e       2     [7]: &031c
0040       2     [8]: &02a8
0042       2     [9]: &0140
0044       2     [10]: &0270
0046       2     [11]: &0298
0048       2     [12]: &027c
004a       2     [13]: &0160
004c       2     [14]: &0234
004e       2     [15]: &0224
0050       2     [16]: &028c
0052       2     [17]: &0194
0054       2     [18]: &0330
0056       2     [19]: &038c
0058       2     [20]: &0398
005a       2     [21]: &02c0
005c       2     [22]: &01e8
005e       2     [23]: &02b8
0060       2     [24]: &0300
0062       2     [25]: &0308
0064       2     [26]: &0310
0066       2     [27]: &00c0
0068       2     [28]: &00dc
006a       2     [29]: &00f8
006c       2     [30]: &00f0
006e       2     [31]: &00d0
0070       2     [32]: &0100
0072       2     [33]: &00d8
0074       2     [34]: &00c4
0076       2     [35]: &00cc
0078       2     [36]: &00e4
007a       2     [37]: &00e8
007c       2     [38]: &0328
007e       2     [39]: &0108
0080       2     [40]: &009c
0082       2     [41]: &00ec
0084       2     [42]: &010c
0086       2     [43]: &012c
0088       2     [44]: &0138
008a       2     [45]: &016c
008c       2     [46]: &01b8
008e       2     [47]: &01f0
0090       2     [48]: &0244
0092       2     [49]: &033c
0094       2     [50]: &02cc
0096       2     [51]: &03a4
0098       2 <unused>
009a  a02  - # ROM allocations
009a       2     Header [Size: 4, Type: TC_REF_INTERNED_STRING]
009c       4     Value: 'foo'
00a0       2     <unused>
00a2       2     Header [Size: 22, Type: TC_REF_INTERNED_STRING]
00a4      16     Value: 'My uncaught exception'
00ba       2     Header [Size: 1, Type: TC_REF_INTERNED_STRING]
00bc       1     Value: ''
00bd       1     <unused>
00be       2     Header [Size: 2, Type: TC_REF_INTERNED_STRING]
00c0       2     Value: 'a'
00c2       2     Header [Size: 5, Type: TC_REF_INTERNED_STRING]
00c4       5     Value: 'boo!'
00c9       1     <unused>
00ca       2     Header [Size: 2, Type: TC_REF_INTERNED_STRING]
00cc       2     Value: 'c'
00ce       2     Header [Size: 3, Type: TC_REF_INTERNED_STRING]
00d0       3     Value: 'ac'
00d3       3     <unused>
00d6       2     Header [Size: 2, Type: TC_REF_INTERNED_STRING]
00d8       2     Value: 'b'
00da       2     Header [Size: 3, Type: TC_REF_INTERNED_STRING]
00dc       3     Value: 'ab'
00df       3     <unused>
00e2       2     Header [Size: 2, Type: TC_REF_INTERNED_STRING]
00e4       2     Value: 'd'
00e6       2     Header [Size: 2, Type: TC_REF_INTERNED_STRING]
00e8       2     Value: 'e'
00ea       2     Header [Size: 2, Type: TC_REF_INTERNED_STRING]
00ec       2     Value: 'g'
00ee       2     Header [Size: 6, Type: TC_REF_INTERNED_STRING]
00f0       6     Value: 'abdeg'
00f6       2     Header [Size: 6, Type: TC_REF_INTERNED_STRING]
00f8       6     Value: 'abceg'
00fe       2     Header [Size: 4, Type: TC_REF_INTERNED_STRING]
0100       4     Value: 'adc'
0104       2     <unused>
0106       2     Header [Size: 2, Type: TC_REF_INTERNED_STRING]
0108       2     Value: 'f'
010a       2     Header [Size: 2, Type: TC_REF_INTERNED_STRING]
010c       2     Value: 'h'
010e       2     Header [Size: 23, Type: TC_REF_INTERNED_STRING]
0110      17     Value: '0abgh1acegh2acdfh3abgh'
0127       3     <unused>
012a       2     Header [Size: 8, Type: TC_REF_INTERNED_STRING]
012c       8     Value: 'message'
0134       2     <unused>
0136       2     Header [Size: 6, Type: TC_REF_INTERNED_STRING]
0138       6     Value: 'start'
013e       2     Header [Size: 3, Type: TC_REF_INTERNED_STRING]
0140       3     Value: '_i'
0143       3     <unused>
0146       2     Header [Size: 7, Type: TC_REF_INTERNED_STRING]
0148       7     Value: '_break'
014f       3     <unused>
0152       2     Header [Size: 7, Type: TC_REF_INTERNED_STRING]
0154       7     Value: '_catch'
015b       3     <unused>
015e       2     Header [Size: 9, Type: TC_REF_INTERNED_STRING]
0160       9     Value: '_loopEnd'
0169       1     <unused>
016a       2     Header [Size: 37, Type: TC_REF_INTERNED_STRING]
016c      25     Value: 'start_i0_loopEnd_i1_loopEnd_i2_break'
0191       1     <unused>
0192       2     Header [Size: 7, Type: TC_REF_INTERNED_STRING]
0194       7     Value: '_throw'
019b       3     <unused>
019e       2     Header [Size: 8, Type: TC_REF_INTERNED_STRING]
01a0       8     Value: '_catch1'
01a8       2     <unused>
01aa       2     Header [Size: 8, Type: TC_REF_INTERNED_STRING]
01ac       8     Value: '_catch2'
01b4       2     <unused>
01b6       2     Header [Size: 44, Type: TC_REF_INTERNED_STRING]
01b8      2c     Value: 'start_i0_loopEnd_i1_loopEnd_i2_throw_catch1'
01e4       2     <unused>
01e6       2     Header [Size: 5, Type: TC_REF_INTERNED_STRING]
01e8       5     Value: '_try'
01ed       1     <unused>
01ee       2     Header [Size: 49, Type: TC_REF_INTERNED_STRING]
01f0      31     Value: 'start_i0_try_try_loopEnd_i1_try_try_throw_catch1'
0221       1     <unused>
0222       2     Header [Size: 11, Type: TC_REF_INTERNED_STRING]
0224       b     Value: '_outer_try'
022f       3     <unused>
0232       2     Header [Size: 13, Type: TC_REF_INTERNED_STRING]
0234       d     Value: '_outer_catch'
0241       1     <unused>
0242       2     Header [Size: 41, Type: TC_REF_INTERNED_STRING]
0244      29     Value: 'start_inner_inner_try_return_outer_catch'
026d       1     <unused>
026e       2     Header [Size: 7, Type: TC_REF_INTERNED_STRING]
0270       7     Value: '_inner'
0277       3     <unused>
027a       2     Header [Size: 11, Type: TC_REF_INTERNED_STRING]
027c       b     Value: '_inner_try'
0287       3     <unused>
028a       2     Header [Size: 8, Type: TC_REF_INTERNED_STRING]
028c       8     Value: '_return'
0294       2     <unused>
0296       2     Header [Size: 13, Type: TC_REF_INTERNED_STRING]
0298       d     Value: '_inner_catch'
02a5       1     <unused>
02a6       2     Header [Size: 11, Type: TC_REF_INTERNED_STRING]
02a8       b     Value: '_end_inner'
02b3       3     <unused>
02b6       2     Header [Size: 6, Type: TC_REF_INTERNED_STRING]
02b8       6     Value: '_try1'
02be       2     Header [Size: 8, Type: TC_REF_INTERNED_STRING]
02c0       8     Value: '_thrown'
02c8       2     <unused>
02ca       2     Header [Size: 47, Type: TC_REF_INTERNED_STRING]
02cc      2f     Value: 'start_try1_inner_try2_try3_value_catch1_thrown'
02fb       3     <unused>
02fe       2     Header [Size: 6, Type: TC_REF_INTERNED_STRING]
0300       6     Value: '_try2'
0306       2     Header [Size: 6, Type: TC_REF_INTERNED_STRING]
0308       6     Value: '_try3'
030e       2     Header [Size: 7, Type: TC_REF_INTERNED_STRING]
0310       7     Value: '_value'
0317       3     <unused>
031a       2     Header [Size: 8, Type: TC_REF_INTERNED_STRING]
031c       8     Value: '_catch3'
0324       2     <unused>
0326       2     Header [Size: 4, Type: TC_REF_INTERNED_STRING]
0328       4     Value: 'end'
032c       2     <unused>
032e       2     Header [Size: 8, Type: TC_REF_INTERNED_STRING]
0330       8     Value: '_throw1'
0338       2     <unused>
033a       2     Header [Size: 75, Type: TC_REF_INTERNED_STRING]
033c      4b     Value: 'start_try1_inner_try2_throw2_catch2_try3_throw3_catch3_value_throw1_catch1'
0387       3     <unused>
038a       2     Header [Size: 8, Type: TC_REF_INTERNED_STRING]
038c       8     Value: '_throw2'
0394       2     <unused>
0396       2     Header [Size: 8, Type: TC_REF_INTERNED_STRING]
0398       8     Value: '_throw3'
03a0       2     <unused>
03a2       2     Header [Size: 2, Type: TC_REF_INTERNED_STRING]
03a4       2     Value: 'x'
03a6       2     Header [Size: 2, Type: TC_REF_HOST_FUNC]
03a8       2     Value: Import Table [0] (&001c)
03aa       2     Header [Size: 2, Type: TC_REF_HOST_FUNC]
03ac       2     Value: Import Table [1] (&001e)
03ae       2     Header [Size: 2, Type: TC_REF_FUNCTION]
03b0   68  -     # Function run
03b0       0         maxStackDepth: 2
03b0       0         isContinuation: 0
03b0   68  -         # Block entry
03b0       3             LoadGlobal [3]
03b3       1             Literal(lit undefined)
03b4       2             Call(count 1, flag true)
03b6       3             LoadGlobal [4]
03b9       1             Literal(lit undefined)
03ba       2             Call(count 1, flag true)
03bc       3             LoadGlobal [5]
03bf       1             Literal(lit undefined)
03c0       2             Call(count 1, flag true)
03c2       3             LoadGlobal [6]
03c5       1             Literal(lit undefined)
03c6       2             Call(count 1, flag true)
03c8       3             LoadGlobal [7]
03cb       1             Literal(lit undefined)
03cc       2             Call(count 1, flag true)
03ce       3             LoadGlobal [8]
03d1       1             Literal(lit undefined)
03d2       2             Call(count 1, flag true)
03d4       3             LoadGlobal [9]
03d7       1             Literal(lit undefined)
03d8       2             Call(count 1, flag true)
03da       3             LoadGlobal [10]
03dd       1             Literal(lit undefined)
03de       2             Call(count 1, flag true)
03e0       3             LoadGlobal [11]
03e3       1             Literal(lit undefined)
03e4       2             Call(count 1, flag true)
03e6       3             LoadGlobal [12]
03e9       1             Literal(lit undefined)
03ea       2             Call(count 1, flag true)
03ec       3             LoadGlobal [13]
03ef       1             Literal(lit undefined)
03f0       2             Call(count 1, flag true)
03f2       3             LoadGlobal [14]
03f5       1             Literal(lit undefined)
03f6       2             Call(count 1, flag true)
03f8       3             LoadGlobal [15]
03fb       1             Literal(lit undefined)
03fc       2             Call(count 1, flag true)
03fe       3             LoadGlobal [16]
0401       1             Literal(lit undefined)
0402       2             Call(count 1, flag true)
0404       3             LoadGlobal [17]
0407       1             Literal(lit undefined)
0408       2             Call(count 1, flag true)
040a       3             LoadGlobal [18]
040d       1             Literal(lit undefined)
040e       2             Call(count 1, flag true)
0410       3             LoadGlobal [2]
0413       1             Literal(lit undefined)
0414       2             Call(count 1, flag true)
0416       1             Literal(lit undefined)
0417       1             Return()
0418       2     <unused>
041a       2     Header [Size: 3, Type: TC_REF_FUNCTION]
041c    d  -     # Function test_uncaughtException
041c       0         maxStackDepth: 3
041c       0         isContinuation: 0
041c    d  -         # Block entry
041c       3             LoadGlobal [0]
041f       1             Literal(lit undefined)
0420       3             Literal(&009c)
0423       2             Call(count 2, flag true)
0425       3             Literal(&00a4)
0428       1             Throw()
0429       1     <unused>
042a       2     Header [Size: 5, Type: TC_REF_FUNCTION]
042c   2e  -     # Function test_minimalTryCatch
042c       0         maxStackDepth: 5
042c       0         isContinuation: 0
042c   17  -         # Block entry
042c       3             Literal(deleted)
042f       3             Literal(&00bc)
0432       1             StoreVar(index 0)
0433       4             StartTry(&0444)
0437       1             LoadVar(index 0)
0438       3             Literal(&00c0)
043b       1             BinOp(op '+')
043c       1             LoadVar(index 3)
043d       1             StoreVar(index 0)
043e       1             Pop(count 1)
043f       3             Literal(&00c4)
0442       1             Throw()
0443       1         <unused>
0444   16  -         # Block block1
0444       1             Pop(count 1)
0445       1             LoadVar(index 0)
0446       3             Literal(&00cc)
0449       1             BinOp(op '+')
044a       1             LoadVar(index 1)
044b       1             StoreVar(index 0)
044c       1             Pop(count 1)
044d       3             LoadGlobal [1]
0450       1             Literal(lit undefined)
0451       1             LoadVar(index 0)
0452       3             Literal(&00d0)
0455       2             Call(count 3, flag true)
0457       1             Pop(count 1)
0458       1             Literal(lit undefined)
0459       1             Return()
045a       2     Header [Size: 5, Type: TC_REF_FUNCTION]
045c   35  -     # Function test_catchWithoutThrow
045c       0         maxStackDepth: 5
045c       0         isContinuation: 0
045c   1d  -         # Block entry
045c       3             Literal(deleted)
045f       3             Literal(&00bc)
0462       1             StoreVar(index 0)
0463       4             StartTry(&0486)
0467       1             LoadVar(index 0)
0468       3             Literal(&00c0)
046b       1             BinOp(op '+')
046c       1             LoadVar(index 3)
046d       1             StoreVar(index 0)
046e       1             Pop(count 1)
046f       1             LoadVar(index 0)
0470       3             Literal(&00d8)
0473       1             BinOp(op '+')
0474       1             LoadVar(index 3)
0475       1             StoreVar(index 0)
0476       1             Pop(count 1)
0477       2             EndTry()
0479       0             <implicit fallthrough>
0479    d  -         # Block block4
0479       3             LoadGlobal [1]
047c       1             Literal(lit undefined)
047d       1             LoadVar(index 0)
047e       3             Literal(&00dc)
0481       2             Call(count 3, flag true)
0483       1             Pop(count 1)
0484       1             Literal(lit undefined)
0485       1             Return()
0486    b  -         # Block block3
0486       1             Pop(count 1)
0487       1             LoadVar(index 0)
0488       3             Literal(&00cc)
048b       1             BinOp(op '+')
048c       1             LoadVar(index 1)
048d       1             StoreVar(index 0)
048e       1             Pop(count 1)
048f       2             Jump &0479
0491       1     <unused>
0492       2     Header [Size: 7, Type: TC_REF_FUNCTION]
0494   4c  -     # Function test_throwUnwinding
0494       0         maxStackDepth: 7
0494       0         isContinuation: 0
0494   21  -         # Block entry
0494       3             Literal(deleted)
0497       3             Literal(&00bc)
049a       1             StoreVar(index 0)
049b       4             StartTry(&04ca)
049f       1             LoadVar(index 0)
04a0       3             Literal(&00c0)
04a3       1             BinOp(op '+')
04a4       1             LoadVar(index 3)
04a5       1             StoreVar(index 0)
04a6       1             Pop(count 1)
04a7       4             StartTry(&04b6)
04ab       1             LoadVar(index 0)
04ac       3             Literal(&00d8)
04af       1             BinOp(op '+')
04b0       1             LoadVar(index 5)
04b1       1             StoreVar(index 0)
04b2       1             Pop(count 1)
04b3       1             Literal(lit 1)
04b4       1             Throw()
04b5       1         <unused>
04b6   13  -         # Block block5
04b6       1             Pop(count 1)
04b7       1             LoadVar(index 0)
04b8       3             Literal(&00e4)
04bb       1             BinOp(op '+')
04bc       1             LoadVar(index 3)
04bd       1             StoreVar(index 0)
04be       1             Pop(count 1)
04bf       1             LoadVar(index 0)
04c0       3             Literal(&00e8)
04c3       1             BinOp(op '+')
04c4       1             LoadVar(index 3)
04c5       1             StoreVar(index 0)
04c6       1             Pop(count 1)
04c7       1             Literal(lit 2)
04c8       1             Throw()
04c9       1         <unused>
04ca   16  -         # Block block7
04ca       1             Pop(count 1)
04cb       1             LoadVar(index 0)
04cc       3             Literal(&00ec)
04cf       1             BinOp(op '+')
04d0       1             LoadVar(index 1)
04d1       1             StoreVar(index 0)
04d2       1             Pop(count 1)
04d3       3             LoadGlobal [1]
04d6       1             Literal(lit undefined)
04d7       1             LoadVar(index 0)
04d8       3             Literal(&00f0)
04db       2             Call(count 3, flag true)
04dd       1             Pop(count 1)
04de       1             Literal(lit undefined)
04df       1             Return()
04e0       2     <unused>
04e2       2     Header [Size: 7, Type: TC_REF_FUNCTION]
04e4   56  -     # Function test_normalUnwinding
04e4       0         maxStackDepth: 7
04e4       0         isContinuation: 0
04e4   29  -         # Block entry
04e4       3             Literal(deleted)
04e7       3             Literal(&00bc)
04ea       1             StoreVar(index 0)
04eb       4             StartTry(&0524)
04ef       1             LoadVar(index 0)
04f0       3             Literal(&00c0)
04f3       1             BinOp(op '+')
04f4       1             LoadVar(index 3)
04f5       1             StoreVar(index 0)
04f6       1             Pop(count 1)
04f7       4             StartTry(&0518)
04fb       1             LoadVar(index 0)
04fc       3             Literal(&00d8)
04ff       1             BinOp(op '+')
0500       1             LoadVar(index 5)
0501       1             StoreVar(index 0)
0502       1             Pop(count 1)
0503       1             LoadVar(index 0)
0504       3             Literal(&00cc)
0507       1             BinOp(op '+')
0508       1             LoadVar(index 5)
0509       1             StoreVar(index 0)
050a       1             Pop(count 1)
050b       2             EndTry()
050d       0             <implicit fallthrough>
050d    a  -         # Block block10
050d       1             LoadVar(index 0)
050e       3             Literal(&00e8)
0511       1             BinOp(op '+')
0512       1             LoadVar(index 3)
0513       1             StoreVar(index 0)
0514       1             Pop(count 1)
0515       1             Literal(lit 2)
0516       1             Throw()
0517       1         <unused>
0518    b  -         # Block block9
0518       1             Pop(count 1)
0519       1             LoadVar(index 0)
051a       3             Literal(&00e4)
051d       1             BinOp(op '+')
051e       1             LoadVar(index 3)
051f       1             StoreVar(index 0)
0520       1             Pop(count 1)
0521       2             Jump &050d
0523       1         <unused>
0524   16  -         # Block block11
0524       1             Pop(count 1)
0525       1             LoadVar(index 0)
0526       3             Literal(&00ec)
0529       1             BinOp(op '+')
052a       1             LoadVar(index 1)
052b       1             StoreVar(index 0)
052c       1             Pop(count 1)
052d       3             LoadGlobal [1]
0530       1             Literal(lit undefined)
0531       1             LoadVar(index 0)
0532       3             Literal(&00f8)
0535       2             Call(count 3, flag true)
0537       1             Pop(count 1)
0538       1             Literal(lit undefined)
0539       1             Return()
053a       2     Header [Size: 5, Type: TC_REF_FUNCTION]
053c   3f  -     # Function test_throwAcrossFrames
053c       0         maxStackDepth: 5
053c       0         isContinuation: 0
053c   26  -         # Block entry
053c       2             ScopeNew(count 2)
053e       3             Literal(&0580)
0541       1             StoreScoped [0]
0542       2             LoadReg('closure')
0544       3             Literal(&00bc)
0547       1             StoreScoped [1]
0548       4             StartTry(&0570)
054c       1             LoadScoped [1]
054d       3             Literal(&00c0)
0550       1             BinOp(op '+')
0551       1             LoadVar(index 3)
0552       1             StoreScoped [1]
0553       1             Pop(count 1)
0554       1             LoadVar(index 0)
0555       1             Literal(lit undefined)
0556       2             Call(count 1, flag true)
0558       1             LoadScoped [1]
0559       3             Literal(&00d8)
055c       1             BinOp(op '+')
055d       1             LoadVar(index 3)
055e       1             StoreScoped [1]
055f       1             Pop(count 1)
0560       2             EndTry()
0562       0             <implicit fallthrough>
0562    d  -         # Block block14
0562       3             LoadGlobal [1]
0565       1             Literal(lit undefined)
0566       1             LoadScoped [1]
0567       3             Literal(&0100)
056a       2             Call(count 3, flag true)
056c       1             Pop(count 1)
056d       1             Literal(lit undefined)
056e       1             Return()
056f       1         <unused>
0570    b  -         # Block block13
0570       1             Pop(count 1)
0571       1             LoadScoped [1]
0572       3             Literal(&00cc)
0575       1             BinOp(op '+')
0576       1             LoadVar(index 1)
0577       1             StoreScoped [1]
0578       1             Pop(count 1)
0579       2             Jump &0562
057b       3     <unused>
057e       2     Header [Size: 2, Type: TC_REF_FUNCTION]
0580    a  -     # Function functionThatThrows
0580       0         maxStackDepth: 2
0580       0         isContinuation: 0
0580    a  -         # Block entry
0580       1             LoadScoped [1]
0581       3             Literal(&00e4)
0584       1             BinOp(op '+')
0585       1             LoadVar(index 0)
0586       1             StoreScoped [1]
0587       1             Pop(count 1)
0588       1             Literal(lit 1)
0589       1             Throw()
058a       2     Header [Size: 6, Type: TC_REF_FUNCTION]
058c   8b  -     # Function test_conditionalThrow
058c       0         maxStackDepth: 6
058c       0         isContinuation: 0
058c    c  -         # Block entry
058c       3             Literal(deleted)
058f       3             Literal(&00bc)
0592       1             StoreVar(index 0)
0593       3             Literal(deleted)
0596       1             Literal(lit 0)
0597       1             StoreVar(index 1)
0598       0             <implicit fallthrough>
0598    5  -         # Block block15
0598       1             LoadVar(index 1)
0599       1             Literal(lit 4)
059a       1             BinOp(op '<')
059b       2             Branch &05ab
059d    e  -         # Block block24
059d       1             Pop(count 1)
059e       3             LoadGlobal [1]
05a1       1             Literal(lit undefined)
05a2       1             LoadVar(index 0)
05a3       3             Literal(&0110)
05a6       2             Call(count 3, flag true)
05a8       1             Pop(count 1)
05a9       1             Literal(lit undefined)
05aa       1             Return()
05ab   19  -         # Block block16
05ab       1             LoadVar(index 0)
05ac       1             LoadVar(index 1)
05ad       1             BinOp(op '+')
05ae       1             LoadVar(index 2)
05af       1             StoreVar(index 0)
05b0       1             Pop(count 1)
05b1       4             StartTry(&060c)
05b5       1             LoadVar(index 0)
05b6       3             Literal(&00c0)
05b9       1             BinOp(op '+')
05ba       1             LoadVar(index 4)
05bb       1             StoreVar(index 0)
05bc       1             Pop(count 1)
05bd       1             LoadVar(index 1)
05be       1             Literal(lit 3)
05bf       1             BinOp(op '%')
05c0       1             Literal(lit 0)
05c1       1             BinOp(op '===')
05c2       2             Branch &05dd
05c4    f  -         # Block block18
05c4       1             LoadVar(index 0)
05c5       3             Literal(&00cc)
05c8       1             BinOp(op '+')
05c9       1             LoadVar(index 4)
05ca       1             StoreVar(index 0)
05cb       1             Pop(count 1)
05cc       1             LoadVar(index 1)
05cd       1             Literal(lit 3)
05ce       1             BinOp(op '%')
05cf       1             Literal(lit 1)
05d0       1             BinOp(op '!==')
05d1       2             Branch &05e7
05d3    a  -         # Block block20
05d3       1             LoadVar(index 0)
05d4       3             Literal(&00e8)
05d7       1             BinOp(op '+')
05d8       1             LoadVar(index 4)
05d9       1             StoreVar(index 0)
05da       1             Pop(count 1)
05db       1             Literal(lit 2)
05dc       1             Throw()
05dd    a  -         # Block block17
05dd       1             LoadVar(index 0)
05de       3             Literal(&00d8)
05e1       1             BinOp(op '+')
05e2       1             LoadVar(index 4)
05e3       1             StoreVar(index 0)
05e4       1             Pop(count 1)
05e5       1             Literal(lit 1)
05e6       1             Throw()
05e7   12  -         # Block block19
05e7       1             LoadVar(index 0)
05e8       3             Literal(&00e4)
05eb       1             BinOp(op '+')
05ec       1             LoadVar(index 4)
05ed       1             StoreVar(index 0)
05ee       1             Pop(count 1)
05ef       1             LoadVar(index 0)
05f0       3             Literal(&0108)
05f3       1             BinOp(op '+')
05f4       1             LoadVar(index 4)
05f5       1             StoreVar(index 0)
05f6       1             Pop(count 1)
05f7       2             EndTry()
05f9       0             <implicit fallthrough>
05f9   12  -         # Block block23
05f9       1             LoadVar(index 0)
05fa       3             Literal(&010c)
05fd       1             BinOp(op '+')
05fe       1             LoadVar(index 2)
05ff       1             StoreVar(index 0)
0600       1             Pop(count 1)
0601       1             LoadVar(index 1)
0602       1             LoadVar(index 2)
0603       1             Literal(lit 1)
0604       1             BinOp(op '+')
0605       1             LoadVar(index 3)
0606       1             StoreVar(index 1)
0607       1             Pop(count 1)
0608       1             Pop(count 1)
0609       2             Jump &0598
060b       1         <unused>
060c    b  -         # Block block22
060c       1             Pop(count 1)
060d       1             LoadVar(index 0)
060e       3             Literal(&00ec)
0611       1             BinOp(op '+')
0612       1             LoadVar(index 2)
0613       1             StoreVar(index 0)
0614       1             Pop(count 1)
0615       2             Jump &05f9
0617       3     <unused>
061a       2     Header [Size: 8, Type: TC_REF_FUNCTION]
061c   33  -     # Function test_exceptionParameter
061c       0         maxStackDepth: 8
061c       0         isContinuation: 0
061c   18  -         # Block entry
061c       1             Literal(lit undefined)
061d       1             Literal(lit undefined)
061e       3             Literal(deleted)
0621       1             Literal(lit 1)
0622       1             StoreVar(index 2)
0623       1             Literal(lit undefined)
0624       1             StoreVar(index 0)
0625       4             StartTry(&0634)
0629       3             Literal(deleted)
062c       1             Literal(lit undefined)
062d       1             StoreVar(index 5)
062e       1             Literal(lit undefined)
062f       1             StoreVar(index 1)
0630       3             Literal(42)
0633       1             Throw()
0634   1b  -         # Block block25
0634       1             Literal(lit undefined)
0635       3             Literal(deleted)
0638       1             Literal(lit undefined)
0639       1             StoreVar(index 5)
063a       1             Literal(lit undefined)
063b       1             StoreVar(index 4)
063c       1             LoadVar(index 3)
063d       1             LoadVar(index 6)
063e       1             StoreVar(index 2)
063f       1             Pop(count 1)
0640       2             Pop(count 3)
0642       3             LoadGlobal [1]
0645       1             Literal(lit undefined)
0646       1             LoadVar(index 2)
0647       3             Literal(42)
064a       2             Call(count 3, flag true)
064c       1             Pop(count 1)
064d       1             Literal(lit undefined)
064e       1             Return()
064f       3     <unused>
0652       2     Header [Size: 8, Type: TC_REF_FUNCTION]
0654   53  -     # Function test_exceptionParameterWithClosure
0654       0         maxStackDepth: 8
0654       0         isContinuation: 0
0654   1f  -         # Block entry
0654       2             ScopeNew(count 2)
0656       1             Literal(lit undefined)
0657       1             Literal(lit undefined)
0658       3             Literal(deleted)
065b       3             Literal(deleted)
065e       1             Literal(lit 1)
065f       1             StoreVar(index 2)
0660       1             Literal(lit undefined)
0661       1             StoreVar(index 3)
0662       1             Literal(lit undefined)
0663       1             StoreVar(index 0)
0664       4             StartTry(&0674)
0668       3             Literal(deleted)
066b       1             Literal(lit undefined)
066c       1             StoreVar(index 6)
066d       1             Literal(lit undefined)
066e       1             StoreVar(index 1)
066f       3             Literal(42)
0672       1             Throw()
0673       1         <unused>
0674   33  -         # Block block27
0674       1             StoreScoped [1]
0675       1             Literal(lit undefined)
0676       3             Literal(deleted)
0679       1             Literal(lit undefined)
067a       1             StoreVar(index 5)
067b       1             Literal(lit undefined)
067c       1             StoreVar(index 4)
067d       1             LoadScoped [1]
067e       1             LoadVar(index 6)
067f       1             StoreVar(index 2)
0680       1             Pop(count 1)
0681       3             Literal(&06ac)
0684       1             StoreScoped [0]
0685       2             LoadReg('closure')
0687       1             LoadVar(index 6)
0688       1             StoreVar(index 3)
0689       1             Pop(count 1)
068a       2             Pop(count 2)
068c       3             LoadGlobal [1]
068f       1             Literal(lit undefined)
0690       1             LoadVar(index 2)
0691       3             Literal(42)
0694       2             Call(count 3, flag true)
0696       3             LoadGlobal [1]
0699       1             Literal(lit undefined)
069a       1             LoadVar(index 3)
069b       1             Literal(lit undefined)
069c       2             Call(count 1, flag false)
069e       3             Literal(42)
06a1       2             Call(count 3, flag true)
06a3       2             Pop(count 2)
06a5       1             Literal(lit undefined)
06a6       1             Return()
06a7       3     <unused>
06aa       2     Header [Size: 1, Type: TC_REF_FUNCTION]
06ac    2  -     # Function anonymous
06ac       0         maxStackDepth: 1
06ac       0         isContinuation: 0
06ac    2  -         # Block entry
06ac       1             LoadScoped [1]
06ad       1             Return()
06ae       2     Header [Size: 8, Type: TC_REF_FUNCTION]
06b0   29  -     # Function test_rethrow
06b0       0         maxStackDepth: 8
06b0       0         isContinuation: 0
06b0   12  -         # Block entry
06b0       4             StartTry(&06c8)
06b4       4             StartTry(&06c2)
06b8       1             ObjectNew()
06b9       1             LoadVar(index 4)
06ba       3             Literal(&012c)
06bd       3             Literal(&00c4)
06c0       1             ObjectSet()
06c1       1             Throw()
06c2    2  -         # Block block29
06c2       1             LoadVar(index 2)
06c3       1             Throw()
06c4       2         <unused>
06c6    2  -         # Block block32
06c6       1             Literal(lit undefined)
06c7       1             Return()
06c8   11  -         # Block block31
06c8       3             LoadGlobal [1]
06cb       1             Literal(lit undefined)
06cc       1             LoadVar(index 0)
06cd       3             Literal(&012c)
06d0       1             ObjectGet()
06d1       3             Literal(&00c4)
06d4       2             Call(count 3, flag true)
06d6       1             Pop(count 1)
06d7       2             Jump &06c6
06d9       1     <unused>
06da       2     Header [Size: 7, Type: TC_REF_FUNCTION]
06dc   65  -     # Function test_breakOutOfTry
06dc       0         maxStackDepth: 7
06dc       0         isContinuation: 0
06dc    c  -         # Block entry
06dc       3             Literal(deleted)
06df       3             Literal(&0138)
06e2       1             StoreVar(index 0)
06e3       3             Literal(deleted)
06e6       1             Literal(lit 0)
06e7       1             StoreVar(index 1)
06e8       0             <implicit fallthrough>
06e8    7  -         # Block block33
06e8       1             LoadVar(index 1)
06e9       3             Literal(100)
06ec       1             BinOp(op '<')
06ed       2             Branch &06fd
06ef    e  -         # Block block39
06ef       1             Pop(count 1)
06f0       3             LoadGlobal [1]
06f3       1             Literal(lit undefined)
06f4       1             LoadVar(index 0)
06f5       3             Literal(&016c)
06f8       2             Call(count 3, flag true)
06fa       1             Pop(count 1)
06fb       1             Literal(lit undefined)
06fc       1             Return()
06fd   13  -         # Block block34
06fd       1             LoadVar(index 0)
06fe       3             Literal(&0140)
0701       1             LoadVar(index 1)
0702       1             BinOp(op '+')
0703       1             BinOp(op '+')
0704       1             LoadVar(index 2)
0705       1             StoreVar(index 0)
0706       1             Pop(count 1)
0707       4             StartTry(&0736)
070b       1             LoadVar(index 1)
070c       1             Literal(lit 2)
070d       1             BinOp(op '===')
070e       2             Branch &0724
0710    2  -         # Block block36
0710       2             EndTry()
0712       0             <implicit fallthrough>
0712   12  -         # Block block38
0712       1             LoadVar(index 0)
0713       3             Literal(&0160)
0716       1             BinOp(op '+')
0717       1             LoadVar(index 2)
0718       1             StoreVar(index 0)
0719       1             Pop(count 1)
071a       1             LoadVar(index 1)
071b       1             LoadVar(index 2)
071c       1             Literal(lit 1)
071d       1             BinOp(op '+')
071e       1             LoadVar(index 3)
071f       1             StoreVar(index 1)
0720       1             Pop(count 1)
0721       1             Pop(count 1)
0722       2             Jump &06e8
0724   12  -         # Block block35
0724       3             Literal(deleted)
0727       1             Literal(lit undefined)
0728       1             StoreVar(index 4)
0729       1             LoadVar(index 0)
072a       3             Literal(&0148)
072d       1             BinOp(op '+')
072e       1             LoadVar(index 5)
072f       1             StoreVar(index 0)
0730       1             Pop(count 1)
0731       1             Pop(count 1)
0732       2             EndTry()
0734       2             Jump &06ef
0736    b  -         # Block block37
0736       1             Pop(count 1)
0737       1             LoadVar(index 0)
0738       3             Literal(&0154)
073b       1             BinOp(op '+')
073c       1             LoadVar(index 2)
073d       1             StoreVar(index 0)
073e       1             Pop(count 1)
073f       2             Jump &0712
0741       1     <unused>
0742       2     Header [Size: 6, Type: TC_REF_FUNCTION]
0744   73  -     # Function test_breakOutOfTryWithClosure
0744       0         maxStackDepth: 6
0744       0         isContinuation: 0
0744    b  -         # Block entry
0744       3             Literal(deleted)
0747       3             Literal(&0138)
074a       1             StoreVar(index 0)
074b       2             ScopeNew(count 1)
074d       1             Literal(lit 0)
074e       1             StoreScoped [0]
074f       0             <implicit fallthrough>
074f    7  -         # Block block40
074f       1             LoadScoped [0]
0750       3             Literal(100)
0753       1             BinOp(op '<')
0754       2             Branch &0764
0756    e  -         # Block block46
0756       1             ScopeDiscard
0757       3             LoadGlobal [1]
075a       1             Literal(lit undefined)
075b       1             LoadVar(index 0)
075c       3             Literal(&016c)
075f       2             Call(count 3, flag true)
0761       1             Pop(count 1)
0762       1             Literal(lit undefined)
0763       1             Return()
0764   1d  -         # Block block41
0764       3             ScopePush(2)
0767       1             LoadVar(index 0)
0768       3             Literal(&0140)
076b       1             LoadScoped [2]
076c       1             BinOp(op '+')
076d       1             BinOp(op '+')
076e       1             LoadVar(index 1)
076f       1             StoreVar(index 0)
0770       1             Pop(count 1)
0771       3             Literal(&07bc)
0774       1             StoreScoped [0]
0775       2             LoadReg('closure')
0777       1             Pop(count 1)
0778       4             StartTry(&07ac)
077c       1             LoadScoped [2]
077d       1             Literal(lit 2)
077e       1             BinOp(op '===')
077f       2             Branch &0798
0781    2  -         # Block block43
0781       2             EndTry()
0783       0             <implicit fallthrough>
0783   15  -         # Block block45
0783       1             LoadVar(index 0)
0784       3             Literal(&0160)
0787       1             BinOp(op '+')
0788       1             LoadVar(index 1)
0789       1             StoreVar(index 0)
078a       1             Pop(count 1)
078b       2             ScopePop
078d       1             ScopeClone
078e       1             LoadScoped [0]
078f       1             LoadVar(index 1)
0790       1             Literal(lit 1)
0791       1             BinOp(op '+')
0792       1             LoadVar(index 2)
0793       1             StoreScoped [0]
0794       1             Pop(count 1)
0795       1             Pop(count 1)
0796       2             Jump &074f
0798   14  -         # Block block42
0798       3             Literal(deleted)
079b       1             Literal(lit undefined)
079c       1             StoreVar(index 3)
079d       1             LoadVar(index 0)
079e       3             Literal(&0148)
07a1       1             BinOp(op '+')
07a2       1             LoadVar(index 4)
07a3       1             StoreVar(index 0)
07a4       1             Pop(count 1)
07a5       1             Pop(count 1)
07a6       2             EndTry()
07a8       2             ScopePop
07aa       2             Jump &0756
07ac    b  -         # Block block44
07ac       1             Pop(count 1)
07ad       1             LoadVar(index 0)
07ae       3             Literal(&0154)
07b1       1             BinOp(op '+')
07b2       1             LoadVar(index 1)
07b3       1             StoreVar(index 0)
07b4       1             Pop(count 1)
07b5       2             Jump &0783
07b7       3     <unused>
07ba       2     Header [Size: 1, Type: TC_REF_FUNCTION]
07bc    2  -     # Function anonymous1
07bc       0         maxStackDepth: 1
07bc       0         isContinuation: 0
07bc    2  -         # Block entry
07bc       1             LoadScoped [2]
07bd       1             Return()
07be       2     Header [Size: 20, Type: TC_REF_FUNCTION]
07c0   af  -     # Function test_breakOutOfCatch
07c0       0         maxStackDepth: 20
07c0       0         isContinuation: 0
07c0   14  -         # Block entry
07c0       1             Literal(lit undefined)
07c1       1             Literal(lit undefined)
07c2       1             Literal(lit undefined)
07c3       1             Literal(lit undefined)
07c4       1             Literal(lit undefined)
07c5       1             Literal(lit undefined)
07c6       3             Literal(deleted)
07c9       3             Literal(&0138)
07cc       1             StoreVar(index 6)
07cd       1             Literal(lit undefined)
07ce       1             StoreVar(index 0)
07cf       3             Literal(deleted)
07d2       1             Literal(lit 0)
07d3       1             StoreVar(index 7)
07d4       0             <implicit fallthrough>
07d4    7  -         # Block block47
07d4       1             LoadVar(index 7)
07d5       3             Literal(100)
07d8       1             BinOp(op '<')
07d9       2             Branch &07e9
07db    e  -         # Block block55
07db       1             Pop(count 1)
07dc       3             LoadGlobal [1]
07df       1             Literal(lit undefined)
07e0       1             LoadVar(index 6)
07e1       3             Literal(&01b8)
07e4       2             Call(count 3, flag true)
07e6       1             Pop(count 1)
07e7       1             Literal(lit undefined)
07e8       1             Return()
07e9   2c  -         # Block block48
07e9       3             Literal(deleted)
07ec       1             LoadVar(index 6)
07ed       3             Literal(&0140)
07f0       1             LoadVar(index 7)
07f1       1             BinOp(op '+')
07f2       1             BinOp(op '+')
07f3       1             LoadVar(index 9)
07f4       1             StoreVar(index 6)
07f5       1             Pop(count 1)
07f6       1             Literal(lit undefined)
07f7       1             StoreVar(index 8)
07f8       1             Literal(lit undefined)
07f9       1             StoreVar(index 1)
07fa       4             StartTry(&0860)
07fe       3             Literal(deleted)
0801       1             Literal(lit undefined)
0802       1             StoreVar(index 11)
0803       1             Literal(lit undefined)
0804       1             StoreVar(index 2)
0805       4             StartTry(&0848)
0809       3             Literal(deleted)
080c       1             Literal(lit undefined)
080d       1             StoreVar(index 14)
080e       1             Literal(lit undefined)
080f       1             StoreVar(index 3)
0810       1             LoadVar(index 7)
0811       1             Literal(lit 2)
0812       1             BinOp(op '===')
0813       2             Branch &082e
0815    4  -         # Block block50
0815       2             EndTry()
0817       2             EndTry()
0819       0             <implicit fallthrough>
0819   15  -         # Block block54
0819       1             Literal(lit undefined)
081a       1             StoreVar(index 5)
081b       1             LoadVar(index 6)
081c       3             Literal(&0160)
081f       1             BinOp(op '+')
0820       1             LoadVar(index 9)
0821       1             StoreVar(index 6)
0822       1             Pop(count 1)
0823       1             Pop(count 1)
0824       1             LoadVar(index 7)
0825       1             LoadVar(index 8)
0826       1             Literal(lit 1)
0827       1             BinOp(op '+')
0828       1             LoadVar(index 9)
0829       1             StoreVar(index 7)
082a       1             Pop(count 1)
082b       1             Pop(count 1)
082c       2             Jump &07d4
082e   19  -         # Block block49
082e       3             Literal(deleted)
0831       1             Literal(lit undefined)
0832       1             StoreVar(index 15)
0833       1             Literal(lit undefined)
0834       1             StoreVar(index 4)
0835       1             LoadVar(index 6)
0836       3             Literal(&0194)
0839       1             BinOp(op '+')
083a       1             LoadVar(index 16)
083b       1             StoreVar(index 6)
083c       1             Pop(count 1)
083d       1             ObjectNew()
083e       1             LoadVar(index 16)
083f       3             Literal(&012c)
0842       3             Literal(&00c4)
0845       1             ObjectSet()
0846       1             Throw()
0847       1         <unused>
0848   18  -         # Block block51
0848       1             Literal(lit undefined)
0849       3             Literal(deleted)
084c       1             Literal(lit undefined)
084d       1             StoreVar(index 14)
084e       1             Literal(lit undefined)
084f       1             StoreVar(index 13)
0850       1             LoadVar(index 6)
0851       3             Literal(&01a0)
0854       1             BinOp(op '+')
0855       1             LoadVar(index 15)
0856       1             StoreVar(index 6)
0857       1             Pop(count 1)
0858       2             Pop(count 3)
085a       2             EndTry()
085c       1             Pop(count 1)
085d       3             Jump &07db
0860    f  -         # Block block53
0860       1             Literal(lit undefined)
0861       1             Literal(lit undefined)
0862       1             StoreVar(index 10)
0863       1             LoadVar(index 6)
0864       3             Literal(&01ac)
0867       1             BinOp(op '+')
0868       1             LoadVar(index 11)
0869       1             StoreVar(index 6)
086a       1             Pop(count 1)
086b       2             Pop(count 2)
086d       2             Jump &0819
086f       3     <unused>
0872       2     Header [Size: 8, Type: TC_REF_FUNCTION]
0874   83  -     # Function test_breakOutOfDoubleCatch
0874       0         maxStackDepth: 8
0874       0         isContinuation: 0
0874    c  -         # Block entry
0874       3             Literal(deleted)
0877       3             Literal(&0138)
087a       1             StoreVar(index 0)
087b       3             Literal(deleted)
087e       1             Literal(lit 0)
087f       1             StoreVar(index 1)
0880       0             <implicit fallthrough>
0880    7  -         # Block block56
0880       1             LoadVar(index 1)
0881       3             Literal(100)
0884       1             BinOp(op '<')
0885       2             Branch &0895
0887    e  -         # Block block64
0887       1             Pop(count 1)
0888       3             LoadGlobal [1]
088b       1             Literal(lit undefined)
088c       1             LoadVar(index 0)
088d       3             Literal(&01f0)
0890       2             Call(count 3, flag true)
0892       1             Pop(count 1)
0893       1             Literal(lit undefined)
0894       1             Return()
0895   27  -         # Block block57
0895       1             LoadVar(index 0)
0896       3             Literal(&0140)
0899       1             LoadVar(index 1)
089a       1             BinOp(op '+')
089b       1             BinOp(op '+')
089c       1             LoadVar(index 2)
089d       1             StoreVar(index 0)
089e       1             Pop(count 1)
089f       4             StartTry(&08ec)
08a3       1             LoadVar(index 0)
08a4       3             Literal(&01e8)
08a7       1             BinOp(op '+')
08a8       1             LoadVar(index 4)
08a9       1             StoreVar(index 0)
08aa       1             Pop(count 1)
08ab       4             StartTry(&08de)
08af       1             LoadVar(index 0)
08b0       3             Literal(&01e8)
08b3       1             BinOp(op '+')
08b4       1             LoadVar(index 6)
08b5       1             StoreVar(index 0)
08b6       1             Pop(count 1)
08b7       1             LoadVar(index 1)
08b8       1             Literal(lit 1)
08b9       1             BinOp(op '===')
08ba       2             Branch &08d2
08bc    4  -         # Block block59
08bc       2             EndTry()
08be       2             EndTry()
08c0       0             <implicit fallthrough>
08c0   12  -         # Block block63
08c0       1             LoadVar(index 0)
08c1       3             Literal(&0160)
08c4       1             BinOp(op '+')
08c5       1             LoadVar(index 2)
08c6       1             StoreVar(index 0)
08c7       1             Pop(count 1)
08c8       1             LoadVar(index 1)
08c9       1             LoadVar(index 2)
08ca       1             Literal(lit 1)
08cb       1             BinOp(op '+')
08cc       1             LoadVar(index 3)
08cd       1             StoreVar(index 1)
08ce       1             Pop(count 1)
08cf       1             Pop(count 1)
08d0       2             Jump &0880
08d2    c  -         # Block block58
08d2       1             LoadVar(index 0)
08d3       3             Literal(&0194)
08d6       1             BinOp(op '+')
08d7       1             LoadVar(index 6)
08d8       1             StoreVar(index 0)
08d9       1             Pop(count 1)
08da       3             Literal(&009c)
08dd       1             Throw()
08de    d  -         # Block block60
08de       1             LoadVar(index 0)
08df       3             Literal(&01a0)
08e2       1             BinOp(op '+')
08e3       1             LoadVar(index 5)
08e4       1             StoreVar(index 0)
08e5       1             Pop(count 1)
08e6       1             Pop(count 1)
08e7       2             EndTry()
08e9       2             Jump &0887
08eb       1         <unused>
08ec    b  -         # Block block62
08ec       1             Pop(count 1)
08ed       1             LoadVar(index 0)
08ee       3             Literal(&01ac)
08f1       1             BinOp(op '+')
08f2       1             LoadVar(index 2)
08f3       1             StoreVar(index 0)
08f4       1             Pop(count 1)
08f5       2             Jump &08c0
08f7       3     <unused>
08fa       2     Header [Size: 5, Type: TC_REF_FUNCTION]
08fc   2e  -     # Function test_returnFromTry
08fc       0         maxStackDepth: 5
08fc       0         isContinuation: 0
08fc   18  -         # Block entry
08fc       2             ScopeNew(count 2)
08fe       3             Literal(&092c)
0901       1             StoreScoped [0]
0902       2             LoadReg('closure')
0904       3             Literal(&0138)
0907       1             StoreScoped [1]
0908       4             StartTry(&0914)
090c       1             LoadVar(index 0)
090d       1             Literal(lit undefined)
090e       2             Call(count 1, flag true)
0910       3             Literal(&0224)
0913       1             Throw()
0914   16  -         # Block block67
0914       1             LoadScoped [1]
0915       3             Literal(&0234)
0918       1             BinOp(op '+')
0919       1             LoadVar(index 2)
091a       1             StoreScoped [1]
091b       1             Pop(count 1)
091c       1             Pop(count 1)
091d       3             LoadGlobal [1]
0920       1             Literal(lit undefined)
0921       1             LoadScoped [1]
0922       3             Literal(&0244)
0925       2             Call(count 3, flag true)
0927       1             Pop(count 1)
0928       1             Literal(lit undefined)
0929       1             Return()
092a       2     Header [Size: 7, Type: TC_REF_FUNCTION]
092c   54  -     # Function test_returnFromTry_inner
092c       0         maxStackDepth: 7
092c       0         isContinuation: 0
092c   37  -         # Block entry
092c       3             ScopePush(3)
092f       1             Literal(lit undefined)
0930       1             Literal(lit undefined)
0931       1             LoadScoped [4]
0932       3             Literal(&0270)
0935       1             BinOp(op '+')
0936       1             LoadVar(index 2)
0937       1             StoreScoped [4]
0938       1             Pop(count 1)
0939       1             Literal(lit undefined)
093a       1             StoreVar(index 0)
093b       1             Literal(lit undefined)
093c       1             StoreScoped [1]
093d       3             Literal(&0984)
0940       1             StoreScoped [0]
0941       2             LoadReg('closure')
0943       1             Pop(count 1)
0944       4             StartTry(&0964)
0948       3             Literal(deleted)
094b       1             LoadScoped [4]
094c       3             Literal(&027c)
094f       1             BinOp(op '+')
0950       1             LoadVar(index 5)
0951       1             StoreScoped [4]
0952       1             Pop(count 1)
0953       1             Literal(lit undefined)
0954       1             StoreVar(index 1)
0955       1             Literal(lit undefined)
0956       1             StoreVar(index 4)
0957       1             LoadScoped [4]
0958       3             Literal(&028c)
095b       1             BinOp(op '+')
095c       1             LoadVar(index 5)
095d       1             StoreScoped [4]
095e       1             Pop(count 1)
095f       2             EndTry()
0961       1             Literal(lit undefined)
0962       1             Return()
0963       1         <unused>
0964   1c  -         # Block block65
0964       1             Literal(lit undefined)
0965       3             Literal(deleted)
0968       1             LoadScoped [4]
0969       3             Literal(&0298)
096c       1             BinOp(op '+')
096d       1             LoadVar(index 5)
096e       1             StoreScoped [4]
096f       1             Pop(count 1)
0970       1             Literal(lit undefined)
0971       1             StoreVar(index 3)
0972       1             Literal(lit undefined)
0973       1             StoreVar(index 4)
0974       2             Pop(count 3)
0976       1             LoadScoped [4]
0977       3             Literal(&02a8)
097a       1             BinOp(op '+')
097b       1             LoadVar(index 2)
097c       1             StoreScoped [4]
097d       1             Pop(count 1)
097e       1             Literal(lit undefined)
097f       1             Return()
0980       2     <unused>
0982       2     Header [Size: 1, Type: TC_REF_FUNCTION]
0984    2  -     # Function anonymous2
0984       0         maxStackDepth: 1
0984       0         isContinuation: 0
0984    2  -         # Block entry
0984       1             LoadScoped [1]
0985       1             Return()
0986       2     Header [Size: 6, Type: TC_REF_FUNCTION]
0988   42  -     # Function test_returnInsideNestedTry
0988       0         maxStackDepth: 6
0988       0         isContinuation: 0
0988   2a  -         # Block entry
0988       2             ScopeNew(count 2)
098a       3             Literal(&09cc)
098d       1             StoreScoped [0]
098e       2             LoadReg('closure')
0990       3             Literal(&0138)
0993       1             StoreScoped [1]
0994       4             StartTry(&09b2)
0998       3             Literal(deleted)
099b       1             LoadScoped [1]
099c       3             Literal(&02b8)
099f       1             BinOp(op '+')
09a0       1             LoadVar(index 4)
09a1       1             StoreScoped [1]
09a2       1             Pop(count 1)
09a3       1             LoadVar(index 0)
09a4       1             Literal(lit undefined)
09a5       2             Call(count 1, flag false)
09a7       1             StoreVar(index 3)
09a8       1             LoadScoped [1]
09a9       1             LoadVar(index 3)
09aa       1             BinOp(op '+')
09ab       1             LoadVar(index 4)
09ac       1             StoreScoped [1]
09ad       1             Pop(count 1)
09ae       3             Literal(&02c0)
09b1       1             Throw()
09b2   18  -         # Block block73
09b2       1             LoadScoped [1]
09b3       3             Literal(&01a0)
09b6       1             LoadVar(index 1)
09b7       1             BinOp(op '+')
09b8       1             BinOp(op '+')
09b9       1             LoadVar(index 2)
09ba       1             StoreScoped [1]
09bb       1             Pop(count 1)
09bc       1             Pop(count 1)
09bd       3             LoadGlobal [1]
09c0       1             Literal(lit undefined)
09c1       1             LoadScoped [1]
09c2       3             Literal(&02cc)
09c5       2             Call(count 3, flag true)
09c7       1             Pop(count 1)
09c8       1             Literal(lit undefined)
09c9       1             Return()
09ca       2     Header [Size: 6, Type: TC_REF_FUNCTION]
09cc   49  -     # Function inner
09cc       0         maxStackDepth: 6
09cc       0         isContinuation: 0
09cc   28  -         # Block entry
09cc       1             LoadScoped [1]
09cd       3             Literal(&0270)
09d0       1             BinOp(op '+')
09d1       1             LoadVar(index 0)
09d2       1             StoreScoped [1]
09d3       1             Pop(count 1)
09d4       4             StartTry(&0a0a)
09d8       1             LoadScoped [1]
09d9       3             Literal(&0300)
09dc       1             BinOp(op '+')
09dd       1             LoadVar(index 2)
09de       1             StoreScoped [1]
09df       1             Pop(count 1)
09e0       4             StartTry(&09f4)
09e4       1             LoadScoped [1]
09e5       3             Literal(&0308)
09e8       1             BinOp(op '+')
09e9       1             LoadVar(index 4)
09ea       1             StoreScoped [1]
09eb       1             Pop(count 1)
09ec       2             EndTry()
09ee       2             EndTry()
09f0       3             Literal(&0310)
09f3       1             Return()
09f4    b  -         # Block block69
09f4       1             LoadScoped [1]
09f5       3             Literal(&031c)
09f8       1             BinOp(op '+')
09f9       1             LoadVar(index 3)
09fa       1             StoreScoped [1]
09fb       1             Pop(count 1)
09fc       1             Pop(count 1)
09fd       2             EndTry()
09ff       0             <implicit fallthrough>
09ff    a  -         # Block block72
09ff       1             LoadScoped [1]
0a00       3             Literal(&0328)
0a03       1             BinOp(op '+')
0a04       1             LoadVar(index 0)
0a05       1             StoreScoped [1]
0a06       1             Pop(count 1)
0a07       1             Literal(lit undefined)
0a08       1             Return()
0a09       1         <unused>
0a0a    b  -         # Block block71
0a0a       1             LoadScoped [1]
0a0b       3             Literal(&01ac)
0a0e       1             BinOp(op '+')
0a0f       1             LoadVar(index 1)
0a10       1             StoreScoped [1]
0a11       1             Pop(count 1)
0a12       1             Pop(count 1)
0a13       2             Jump &09ff
0a15       1     <unused>
0a16       2     Header [Size: 6, Type: TC_REF_FUNCTION]
0a18   42  -     # Function test_returnInsideNestedCatch
0a18       0         maxStackDepth: 6
0a18       0         isContinuation: 0
0a18   2a  -         # Block entry
0a18       2             ScopeNew(count 2)
0a1a       3             Literal(&0a5c)
0a1d       1             StoreScoped [0]
0a1e       2             LoadReg('closure')
0a20       3             Literal(&0138)
0a23       1             StoreScoped [1]
0a24       4             StartTry(&0a42)
0a28       3             Literal(deleted)
0a2b       1             LoadScoped [1]
0a2c       3             Literal(&02b8)
0a2f       1             BinOp(op '+')
0a30       1             LoadVar(index 4)
0a31       1             StoreScoped [1]
0a32       1             Pop(count 1)
0a33       1             LoadVar(index 0)
0a34       1             Literal(lit undefined)
0a35       2             Call(count 1, flag false)
0a37       1             StoreVar(index 3)
0a38       1             LoadScoped [1]
0a39       1             LoadVar(index 3)
0a3a       1             BinOp(op '+')
0a3b       1             LoadVar(index 4)
0a3c       1             StoreScoped [1]
0a3d       1             Pop(count 1)
0a3e       3             Literal(&0330)
0a41       1             Throw()
0a42   18  -         # Block block79
0a42       1             LoadScoped [1]
0a43       1             LoadVar(index 1)
0a44       3             Literal(&01a0)
0a47       1             BinOp(op '+')
0a48       1             BinOp(op '+')
0a49       1             LoadVar(index 2)
0a4a       1             StoreScoped [1]
0a4b       1             Pop(count 1)
0a4c       1             Pop(count 1)
0a4d       3             LoadGlobal [1]
0a50       1             Literal(lit undefined)
0a51       1             LoadScoped [1]
0a52       3             Literal(&033c)
0a55       2             Call(count 3, flag true)
0a57       1             Pop(count 1)
0a58       1             Literal(lit undefined)
0a59       1             Return()
0a5a       2     Header [Size: 5, Type: TC_REF_FUNCTION]
0a5c   40  -     # Function inner1
0a5c       0         maxStackDepth: 5
0a5c       0         isContinuation: 0
0a5c   18  -         # Block entry
0a5c       1             LoadScoped [1]
0a5d       3             Literal(&0270)
0a60       1             BinOp(op '+')
0a61       1             LoadVar(index 0)
0a62       1             StoreScoped [1]
0a63       1             Pop(count 1)
0a64       4             StartTry(&0a74)
0a68       1             LoadScoped [1]
0a69       3             Literal(&0300)
0a6c       1             BinOp(op '+')
0a6d       1             LoadVar(index 2)
0a6e       1             StoreScoped [1]
0a6f       1             Pop(count 1)
0a70       3             Literal(&038c)
0a73       1             Throw()
0a74   1a  -         # Block block75
0a74       1             LoadScoped [1]
0a75       1             LoadVar(index 0)
0a76       3             Literal(&01ac)
0a79       1             BinOp(op '+')
0a7a       1             BinOp(op '+')
0a7b       1             LoadVar(index 1)
0a7c       1             StoreScoped [1]
0a7d       1             Pop(count 1)
0a7e       4             StartTry(&0a8e)
0a82       1             LoadScoped [1]
0a83       3             Literal(&0308)
0a86       1             BinOp(op '+')
0a87       1             LoadVar(index 3)
0a88       1             StoreScoped [1]
0a89       1             Pop(count 1)
0a8a       3             Literal(&0398)
0a8d       1             Throw()
0a8e    e  -         # Block block76
0a8e       1             LoadScoped [1]
0a8f       1             LoadVar(index 1)
0a90       3             Literal(&031c)
0a93       1             BinOp(op '+')
0a94       1             BinOp(op '+')
0a95       1             LoadVar(index 2)
0a96       1             StoreScoped [1]
0a97       1             Pop(count 1)
0a98       3             Literal(&0310)
0a9b       1             Return()
0a9c      14 <unused>
0ab0   2a  - # Globals
0ab0       2     [0]: &03a8
0ab2       2     [1]: &03ac
0ab4       2     [2]: &041c
0ab6       2     [3]: &042c
0ab8       2     [4]: &045c
0aba       2     [5]: &0494
0abc       2     [6]: &04e4
0abe       2     [7]: &053c
0ac0       2     [8]: &058c
0ac2       2     [9]: &061c
0ac4       2     [10]: &0654
0ac6       2     [11]: &06b0
0ac8       2     [12]: &06dc
0aca       2     [13]: &0744
0acc       2     [14]: &07c0
0ace       2     [15]: &0874
0ad0       2     [16]: &08fc
0ad2       2     [17]: &0988
0ad4       2     [18]: &0a18
0ad6       2     [19]: deleted
0ad8       2     Handle: undefined