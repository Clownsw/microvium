Bytecode size: 2856 B

Addr    Size
==== =======
0000   1c  - # Header
0000       1     bytecodeVersion: 7
0001       1     headerSize: 28
0002       1     requiredEngineVersion: 7
0003       1     reserved: 0
0004       2     bytecodeSize: 2856
0006       2     expectedCRC: a333
0008       4     requiredFeatureFlags: 3
000c       2     BCS_IMPORT_TABLE: 001c
000e       2     BCS_EXPORT_TABLE: 0020
0010       2     BCS_SHORT_CALL_TABLE: 0024
0012       2     BCS_BUILTINS: 0024
0014       2     BCS_STRING_TABLE: 002a
0016       2     BCS_ROM: 0094
0018       2     BCS_GLOBALS: 0af0
001a       2     BCS_HEAP: 0b1e
001c    4  - # Import Table
001c       2     [0]: 1
001e       2     [1]: 3
0020    4  - # Export Table
0020       4     [0]: &03c4
0024    6  - # Builtins
0024       2     [BIN_INTERNED_STRINGS]: &0b1c
0026       2     [BIN_ARRAY_PROTO]: &0b18
0028       2     [BIN_STR_PROTOTYPE]: undefined
002a   6a  - # String Table
002a       2     [0]: &00c0
002c       2     [1]: &0114
002e       2     [2]: &00a8
0030       2     [3]: &014c
0032       2     [4]: &0158
0034       2     [5]: &01a4
0036       2     [6]: &01b0
0038       2     [7]: &0320
003a       2     [8]: &02ac
003c       2     [9]: &0144
003e       2     [10]: &0274
0040       2     [11]: &029c
0042       2     [12]: &0280
0044       2     [13]: &0164
0046       2     [14]: &0238
0048       2     [15]: &0228
004a       2     [16]: &0290
004c       2     [17]: &0198
004e       2     [18]: &0334
0050       2     [19]: &0390
0052       2     [20]: &039c
0054       2     [21]: &02c4
0056       2     [22]: &01ec
0058       2     [23]: &02bc
005a       2     [24]: &0304
005c       2     [25]: &030c
005e       2     [26]: &0314
0060       2     [27]: &00c4
0062       2     [28]: &00e0
0064       2     [29]: &00fc
0066       2     [30]: &00f4
0068       2     [31]: &00d4
006a       2     [32]: &0104
006c       2     [33]: &00dc
006e       2     [34]: &00c8
0070       2     [35]: &00d0
0072       2     [36]: &00e8
0074       2     [37]: &00ec
0076       2     [38]: &032c
0078       2     [39]: &010c
007a       2     [40]: &00a0
007c       2     [41]: &00f0
007e       2     [42]: &0110
0080       2     [43]: &0130
0082       2     [44]: &0098
0084       2     [45]: &013c
0086       2     [46]: &0170
0088       2     [47]: &01bc
008a       2     [48]: &01f4
008c       2     [49]: &0248
008e       2     [50]: &0340
0090       2     [51]: &02d0
0092       2     [52]: &03a8
0094       2 <unused>
0096  a46  - # ROM allocations
0096       2     Header [Size: 5, Type: TC_REF_INTERNED_STRING]
0098       5     Value: 'push'
009d       1     <unused>
009e       2     Header [Size: 4, Type: TC_REF_INTERNED_STRING]
00a0       4     Value: 'foo'
00a4       2     <unused>
00a6       2     Header [Size: 22, Type: TC_REF_INTERNED_STRING]
00a8      16     Value: 'My uncaught exception'
00be       2     Header [Size: 1, Type: TC_REF_INTERNED_STRING]
00c0       1     Value: ''
00c1       1     <unused>
00c2       2     Header [Size: 2, Type: TC_REF_INTERNED_STRING]
00c4       2     Value: 'a'
00c6       2     Header [Size: 5, Type: TC_REF_INTERNED_STRING]
00c8       5     Value: 'boo!'
00cd       1     <unused>
00ce       2     Header [Size: 2, Type: TC_REF_INTERNED_STRING]
00d0       2     Value: 'c'
00d2       2     Header [Size: 3, Type: TC_REF_INTERNED_STRING]
00d4       3     Value: 'ac'
00d7       3     <unused>
00da       2     Header [Size: 2, Type: TC_REF_INTERNED_STRING]
00dc       2     Value: 'b'
00de       2     Header [Size: 3, Type: TC_REF_INTERNED_STRING]
00e0       3     Value: 'ab'
00e3       3     <unused>
00e6       2     Header [Size: 2, Type: TC_REF_INTERNED_STRING]
00e8       2     Value: 'd'
00ea       2     Header [Size: 2, Type: TC_REF_INTERNED_STRING]
00ec       2     Value: 'e'
00ee       2     Header [Size: 2, Type: TC_REF_INTERNED_STRING]
00f0       2     Value: 'g'
00f2       2     Header [Size: 6, Type: TC_REF_INTERNED_STRING]
00f4       6     Value: 'abdeg'
00fa       2     Header [Size: 6, Type: TC_REF_INTERNED_STRING]
00fc       6     Value: 'abceg'
0102       2     Header [Size: 4, Type: TC_REF_INTERNED_STRING]
0104       4     Value: 'adc'
0108       2     <unused>
010a       2     Header [Size: 2, Type: TC_REF_INTERNED_STRING]
010c       2     Value: 'f'
010e       2     Header [Size: 2, Type: TC_REF_INTERNED_STRING]
0110       2     Value: 'h'
0112       2     Header [Size: 23, Type: TC_REF_INTERNED_STRING]
0114      17     Value: '0abgh1acegh2acdfh3abgh'
012b       3     <unused>
012e       2     Header [Size: 8, Type: TC_REF_INTERNED_STRING]
0130       8     Value: 'message'
0138       2     <unused>
013a       2     Header [Size: 6, Type: TC_REF_INTERNED_STRING]
013c       6     Value: 'start'
0142       2     Header [Size: 3, Type: TC_REF_INTERNED_STRING]
0144       3     Value: '_i'
0147       3     <unused>
014a       2     Header [Size: 7, Type: TC_REF_INTERNED_STRING]
014c       7     Value: '_break'
0153       3     <unused>
0156       2     Header [Size: 7, Type: TC_REF_INTERNED_STRING]
0158       7     Value: '_catch'
015f       3     <unused>
0162       2     Header [Size: 9, Type: TC_REF_INTERNED_STRING]
0164       9     Value: '_loopEnd'
016d       1     <unused>
016e       2     Header [Size: 37, Type: TC_REF_INTERNED_STRING]
0170      25     Value: 'start_i0_loopEnd_i1_loopEnd_i2_break'
0195       1     <unused>
0196       2     Header [Size: 7, Type: TC_REF_INTERNED_STRING]
0198       7     Value: '_throw'
019f       3     <unused>
01a2       2     Header [Size: 8, Type: TC_REF_INTERNED_STRING]
01a4       8     Value: '_catch1'
01ac       2     <unused>
01ae       2     Header [Size: 8, Type: TC_REF_INTERNED_STRING]
01b0       8     Value: '_catch2'
01b8       2     <unused>
01ba       2     Header [Size: 44, Type: TC_REF_INTERNED_STRING]
01bc      2c     Value: 'start_i0_loopEnd_i1_loopEnd_i2_throw_catch1'
01e8       2     <unused>
01ea       2     Header [Size: 5, Type: TC_REF_INTERNED_STRING]
01ec       5     Value: '_try'
01f1       1     <unused>
01f2       2     Header [Size: 49, Type: TC_REF_INTERNED_STRING]
01f4      31     Value: 'start_i0_try_try_loopEnd_i1_try_try_throw_catch1'
0225       1     <unused>
0226       2     Header [Size: 11, Type: TC_REF_INTERNED_STRING]
0228       b     Value: '_outer_try'
0233       3     <unused>
0236       2     Header [Size: 13, Type: TC_REF_INTERNED_STRING]
0238       d     Value: '_outer_catch'
0245       1     <unused>
0246       2     Header [Size: 41, Type: TC_REF_INTERNED_STRING]
0248      29     Value: 'start_inner_inner_try_return_outer_catch'
0271       1     <unused>
0272       2     Header [Size: 7, Type: TC_REF_INTERNED_STRING]
0274       7     Value: '_inner'
027b       3     <unused>
027e       2     Header [Size: 11, Type: TC_REF_INTERNED_STRING]
0280       b     Value: '_inner_try'
028b       3     <unused>
028e       2     Header [Size: 8, Type: TC_REF_INTERNED_STRING]
0290       8     Value: '_return'
0298       2     <unused>
029a       2     Header [Size: 13, Type: TC_REF_INTERNED_STRING]
029c       d     Value: '_inner_catch'
02a9       1     <unused>
02aa       2     Header [Size: 11, Type: TC_REF_INTERNED_STRING]
02ac       b     Value: '_end_inner'
02b7       3     <unused>
02ba       2     Header [Size: 6, Type: TC_REF_INTERNED_STRING]
02bc       6     Value: '_try1'
02c2       2     Header [Size: 8, Type: TC_REF_INTERNED_STRING]
02c4       8     Value: '_thrown'
02cc       2     <unused>
02ce       2     Header [Size: 47, Type: TC_REF_INTERNED_STRING]
02d0      2f     Value: 'start_try1_inner_try2_try3_value_catch1_thrown'
02ff       3     <unused>
0302       2     Header [Size: 6, Type: TC_REF_INTERNED_STRING]
0304       6     Value: '_try2'
030a       2     Header [Size: 6, Type: TC_REF_INTERNED_STRING]
030c       6     Value: '_try3'
0312       2     Header [Size: 7, Type: TC_REF_INTERNED_STRING]
0314       7     Value: '_value'
031b       3     <unused>
031e       2     Header [Size: 8, Type: TC_REF_INTERNED_STRING]
0320       8     Value: '_catch3'
0328       2     <unused>
032a       2     Header [Size: 4, Type: TC_REF_INTERNED_STRING]
032c       4     Value: 'end'
0330       2     <unused>
0332       2     Header [Size: 8, Type: TC_REF_INTERNED_STRING]
0334       8     Value: '_throw1'
033c       2     <unused>
033e       2     Header [Size: 75, Type: TC_REF_INTERNED_STRING]
0340      4b     Value: 'start_try1_inner_try2_throw2_catch2_try3_throw3_catch3_value_throw1_catch1'
038b       3     <unused>
038e       2     Header [Size: 8, Type: TC_REF_INTERNED_STRING]
0390       8     Value: '_throw2'
0398       2     <unused>
039a       2     Header [Size: 8, Type: TC_REF_INTERNED_STRING]
039c       8     Value: '_throw3'
03a4       2     <unused>
03a6       2     Header [Size: 2, Type: TC_REF_INTERNED_STRING]
03a8       2     Value: 'x'
03aa       2     Header [Size: 2, Type: TC_REF_HOST_FUNC]
03ac       2     Value: Import Table [0] (&001c)
03ae       2     Header [Size: 2, Type: TC_REF_HOST_FUNC]
03b0       2     Value: Import Table [1] (&001e)
03b2       2     Header [Size: 4, Type: TC_REF_FUNCTION]
03b4    c  -     # Function Array_push
03b4       0         maxStackDepth: 4
03b4       0         isContinuation: 0
03b4    c  -         # Block entry
03b4       1             LoadArg(index 1)
03b5       1             LoadArg(index 0)
03b6       1             LoadArg(index 0)
03b7       3             Literal('length')
03ba       1             ObjectGet()
03bb       1             LoadVar(index 0)
03bc       1             ObjectSet()
03bd       1             Pop(count 1)
03be       1             Literal(lit undefined)
03bf       1             Return()
03c0       2     <unused>
03c2       2     Header [Size: 2, Type: TC_REF_FUNCTION]
03c4   79  -     # Function run
03c4       0         maxStackDepth: 2
03c4       0         isContinuation: 0
03c4   79  -         # Block entry
03c4       3             LoadGlobal [3]
03c7       1             Literal(lit undefined)
03c8       2             Call(count 1)
03ca       1             Pop(count 1)
03cb       3             LoadGlobal [4]
03ce       1             Literal(lit undefined)
03cf       2             Call(count 1)
03d1       1             Pop(count 1)
03d2       3             LoadGlobal [5]
03d5       1             Literal(lit undefined)
03d6       2             Call(count 1)
03d8       1             Pop(count 1)
03d9       3             LoadGlobal [6]
03dc       1             Literal(lit undefined)
03dd       2             Call(count 1)
03df       1             Pop(count 1)
03e0       3             LoadGlobal [7]
03e3       1             Literal(lit undefined)
03e4       2             Call(count 1)
03e6       1             Pop(count 1)
03e7       3             LoadGlobal [8]
03ea       1             Literal(lit undefined)
03eb       2             Call(count 1)
03ed       1             Pop(count 1)
03ee       3             LoadGlobal [9]
03f1       1             Literal(lit undefined)
03f2       2             Call(count 1)
03f4       1             Pop(count 1)
03f5       3             LoadGlobal [10]
03f8       1             Literal(lit undefined)
03f9       2             Call(count 1)
03fb       1             Pop(count 1)
03fc       3             LoadGlobal [11]
03ff       1             Literal(lit undefined)
0400       2             Call(count 1)
0402       1             Pop(count 1)
0403       3             LoadGlobal [12]
0406       1             Literal(lit undefined)
0407       2             Call(count 1)
0409       1             Pop(count 1)
040a       3             LoadGlobal [13]
040d       1             Literal(lit undefined)
040e       2             Call(count 1)
0410       1             Pop(count 1)
0411       3             LoadGlobal [14]
0414       1             Literal(lit undefined)
0415       2             Call(count 1)
0417       1             Pop(count 1)
0418       3             LoadGlobal [15]
041b       1             Literal(lit undefined)
041c       2             Call(count 1)
041e       1             Pop(count 1)
041f       3             LoadGlobal [16]
0422       1             Literal(lit undefined)
0423       2             Call(count 1)
0425       1             Pop(count 1)
0426       3             LoadGlobal [17]
0429       1             Literal(lit undefined)
042a       2             Call(count 1)
042c       1             Pop(count 1)
042d       3             LoadGlobal [18]
0430       1             Literal(lit undefined)
0431       2             Call(count 1)
0433       1             Pop(count 1)
0434       3             LoadGlobal [2]
0437       1             Literal(lit undefined)
0438       2             Call(count 1)
043a       1             Pop(count 1)
043b       1             Literal(lit undefined)
043c       1             Return()
043d       1     <unused>
043e       2     Header [Size: 3, Type: TC_REF_FUNCTION]
0440    e  -     # Function test_uncaughtException
0440       0         maxStackDepth: 3
0440       0         isContinuation: 0
0440    e  -         # Block entry
0440       3             LoadGlobal [0]
0443       1             Literal(lit undefined)
0444       3             Literal(&00a0)
0447       2             Call(count 2)
0449       1             Pop(count 1)
044a       3             Literal(&00a8)
044d       1             Throw()
044e       2     Header [Size: 5, Type: TC_REF_FUNCTION]
0450   2f  -     # Function test_minimalTryCatch
0450       0         maxStackDepth: 5
0450       0         isContinuation: 0
0450   17  -         # Block entry
0450       3             Literal(deleted)
0453       3             Literal(&00c0)
0456       1             StoreVar(index 0)
0457       4             StartTry(&0468)
045b       1             LoadVar(index 0)
045c       3             Literal(&00c4)
045f       1             BinOp(op '+')
0460       1             LoadVar(index 3)
0461       1             StoreVar(index 0)
0462       1             Pop(count 1)
0463       3             Literal(&00c8)
0466       1             Throw()
0467       1         <unused>
0468   17  -         # Block block1
0468       1             Pop(count 1)
0469       1             LoadVar(index 0)
046a       3             Literal(&00d0)
046d       1             BinOp(op '+')
046e       1             LoadVar(index 1)
046f       1             StoreVar(index 0)
0470       1             Pop(count 1)
0471       3             LoadGlobal [1]
0474       1             Literal(lit undefined)
0475       1             LoadVar(index 0)
0476       3             Literal(&00d4)
0479       2             Call(count 3)
047b       1             Pop(count 1)
047c       1             Pop(count 1)
047d       1             Literal(lit undefined)
047e       1             Return()
047f       3     <unused>
0482       2     Header [Size: 5, Type: TC_REF_FUNCTION]
0484   37  -     # Function test_catchWithoutThrow
0484       0         maxStackDepth: 5
0484       0         isContinuation: 0
0484   1d  -         # Block entry
0484       3             Literal(deleted)
0487       3             Literal(&00c0)
048a       1             StoreVar(index 0)
048b       4             StartTry(&04b0)
048f       1             LoadVar(index 0)
0490       3             Literal(&00c4)
0493       1             BinOp(op '+')
0494       1             LoadVar(index 3)
0495       1             StoreVar(index 0)
0496       1             Pop(count 1)
0497       1             LoadVar(index 0)
0498       3             Literal(&00dc)
049b       1             BinOp(op '+')
049c       1             LoadVar(index 3)
049d       1             StoreVar(index 0)
049e       1             Pop(count 1)
049f       2             EndTry()
04a1       0             <implicit fallthrough>
04a1    e  -         # Block block4
04a1       3             LoadGlobal [1]
04a4       1             Literal(lit undefined)
04a5       1             LoadVar(index 0)
04a6       3             Literal(&00e0)
04a9       2             Call(count 3)
04ab       1             Pop(count 1)
04ac       1             Pop(count 1)
04ad       1             Literal(lit undefined)
04ae       1             Return()
04af       1         <unused>
04b0    b  -         # Block block3
04b0       1             Pop(count 1)
04b1       1             LoadVar(index 0)
04b2       3             Literal(&00d0)
04b5       1             BinOp(op '+')
04b6       1             LoadVar(index 1)
04b7       1             StoreVar(index 0)
04b8       1             Pop(count 1)
04b9       2             Jump &04a1
04bb       3     <unused>
04be       2     Header [Size: 7, Type: TC_REF_FUNCTION]
04c0   4d  -     # Function test_throwUnwinding
04c0       0         maxStackDepth: 7
04c0       0         isContinuation: 0
04c0   21  -         # Block entry
04c0       3             Literal(deleted)
04c3       3             Literal(&00c0)
04c6       1             StoreVar(index 0)
04c7       4             StartTry(&04f6)
04cb       1             LoadVar(index 0)
04cc       3             Literal(&00c4)
04cf       1             BinOp(op '+')
04d0       1             LoadVar(index 3)
04d1       1             StoreVar(index 0)
04d2       1             Pop(count 1)
04d3       4             StartTry(&04e2)
04d7       1             LoadVar(index 0)
04d8       3             Literal(&00dc)
04db       1             BinOp(op '+')
04dc       1             LoadVar(index 5)
04dd       1             StoreVar(index 0)
04de       1             Pop(count 1)
04df       1             Literal(lit 1)
04e0       1             Throw()
04e1       1         <unused>
04e2   13  -         # Block block5
04e2       1             Pop(count 1)
04e3       1             LoadVar(index 0)
04e4       3             Literal(&00e8)
04e7       1             BinOp(op '+')
04e8       1             LoadVar(index 3)
04e9       1             StoreVar(index 0)
04ea       1             Pop(count 1)
04eb       1             LoadVar(index 0)
04ec       3             Literal(&00ec)
04ef       1             BinOp(op '+')
04f0       1             LoadVar(index 3)
04f1       1             StoreVar(index 0)
04f2       1             Pop(count 1)
04f3       1             Literal(lit 2)
04f4       1             Throw()
04f5       1         <unused>
04f6   17  -         # Block block7
04f6       1             Pop(count 1)
04f7       1             LoadVar(index 0)
04f8       3             Literal(&00f0)
04fb       1             BinOp(op '+')
04fc       1             LoadVar(index 1)
04fd       1             StoreVar(index 0)
04fe       1             Pop(count 1)
04ff       3             LoadGlobal [1]
0502       1             Literal(lit undefined)
0503       1             LoadVar(index 0)
0504       3             Literal(&00f4)
0507       2             Call(count 3)
0509       1             Pop(count 1)
050a       1             Pop(count 1)
050b       1             Literal(lit undefined)
050c       1             Return()
050d       1     <unused>
050e       2     Header [Size: 7, Type: TC_REF_FUNCTION]
0510   57  -     # Function test_normalUnwinding
0510       0         maxStackDepth: 7
0510       0         isContinuation: 0
0510   29  -         # Block entry
0510       3             Literal(deleted)
0513       3             Literal(&00c0)
0516       1             StoreVar(index 0)
0517       4             StartTry(&0550)
051b       1             LoadVar(index 0)
051c       3             Literal(&00c4)
051f       1             BinOp(op '+')
0520       1             LoadVar(index 3)
0521       1             StoreVar(index 0)
0522       1             Pop(count 1)
0523       4             StartTry(&0544)
0527       1             LoadVar(index 0)
0528       3             Literal(&00dc)
052b       1             BinOp(op '+')
052c       1             LoadVar(index 5)
052d       1             StoreVar(index 0)
052e       1             Pop(count 1)
052f       1             LoadVar(index 0)
0530       3             Literal(&00d0)
0533       1             BinOp(op '+')
0534       1             LoadVar(index 5)
0535       1             StoreVar(index 0)
0536       1             Pop(count 1)
0537       2             EndTry()
0539       0             <implicit fallthrough>
0539    a  -         # Block block10
0539       1             LoadVar(index 0)
053a       3             Literal(&00ec)
053d       1             BinOp(op '+')
053e       1             LoadVar(index 3)
053f       1             StoreVar(index 0)
0540       1             Pop(count 1)
0541       1             Literal(lit 2)
0542       1             Throw()
0543       1         <unused>
0544    b  -         # Block block9
0544       1             Pop(count 1)
0545       1             LoadVar(index 0)
0546       3             Literal(&00e8)
0549       1             BinOp(op '+')
054a       1             LoadVar(index 3)
054b       1             StoreVar(index 0)
054c       1             Pop(count 1)
054d       2             Jump &0539
054f       1         <unused>
0550   17  -         # Block block11
0550       1             Pop(count 1)
0551       1             LoadVar(index 0)
0552       3             Literal(&00f0)
0555       1             BinOp(op '+')
0556       1             LoadVar(index 1)
0557       1             StoreVar(index 0)
0558       1             Pop(count 1)
0559       3             LoadGlobal [1]
055c       1             Literal(lit undefined)
055d       1             LoadVar(index 0)
055e       3             Literal(&00fc)
0561       2             Call(count 3)
0563       1             Pop(count 1)
0564       1             Pop(count 1)
0565       1             Literal(lit undefined)
0566       1             Return()
0567       3     <unused>
056a       2     Header [Size: 5, Type: TC_REF_FUNCTION]
056c   41  -     # Function test_throwAcrossFrames
056c       0         maxStackDepth: 5
056c       0         isContinuation: 0
056c   27  -         # Block entry
056c       2             ScopeNew(count 2)
056e       3             Literal(&05b0)
0571       1             StoreScoped [0]
0572       2             LoadReg('closure')
0574       3             Literal(&00c0)
0577       1             StoreScoped [1]
0578       4             StartTry(&05a2)
057c       1             LoadScoped [1]
057d       3             Literal(&00c4)
0580       1             BinOp(op '+')
0581       1             LoadVar(index 3)
0582       1             StoreScoped [1]
0583       1             Pop(count 1)
0584       1             LoadVar(index 0)
0585       1             Literal(lit undefined)
0586       2             Call(count 1)
0588       1             Pop(count 1)
0589       1             LoadScoped [1]
058a       3             Literal(&00dc)
058d       1             BinOp(op '+')
058e       1             LoadVar(index 3)
058f       1             StoreScoped [1]
0590       1             Pop(count 1)
0591       2             EndTry()
0593       0             <implicit fallthrough>
0593    e  -         # Block block14
0593       3             LoadGlobal [1]
0596       1             Literal(lit undefined)
0597       1             LoadScoped [1]
0598       3             Literal(&0104)
059b       2             Call(count 3)
059d       1             Pop(count 1)
059e       1             Pop(count 1)
059f       1             Literal(lit undefined)
05a0       1             Return()
05a1       1         <unused>
05a2    b  -         # Block block13
05a2       1             Pop(count 1)
05a3       1             LoadScoped [1]
05a4       3             Literal(&00d0)
05a7       1             BinOp(op '+')
05a8       1             LoadVar(index 1)
05a9       1             StoreScoped [1]
05aa       1             Pop(count 1)
05ab       2             Jump &0593
05ad       1     <unused>
05ae       2     Header [Size: 2, Type: TC_REF_FUNCTION]
05b0    a  -     # Function functionThatThrows
05b0       0         maxStackDepth: 2
05b0       0         isContinuation: 0
05b0    a  -         # Block entry
05b0       1             LoadScoped [1]
05b1       3             Literal(&00e8)
05b4       1             BinOp(op '+')
05b5       1             LoadVar(index 0)
05b6       1             StoreScoped [1]
05b7       1             Pop(count 1)
05b8       1             Literal(lit 1)
05b9       1             Throw()
05ba       2     Header [Size: 6, Type: TC_REF_FUNCTION]
05bc   8b  -     # Function test_conditionalThrow
05bc       0         maxStackDepth: 6
05bc       0         isContinuation: 0
05bc    c  -         # Block entry
05bc       3             Literal(deleted)
05bf       3             Literal(&00c0)
05c2       1             StoreVar(index 0)
05c3       3             Literal(deleted)
05c6       1             Literal(lit 0)
05c7       1             StoreVar(index 1)
05c8       0             <implicit fallthrough>
05c8    5  -         # Block block15
05c8       1             LoadVar(index 1)
05c9       1             Literal(lit 4)
05ca       1             BinOp(op '<')
05cb       2             Branch &05dc
05cd    f  -         # Block block24
05cd       1             Pop(count 1)
05ce       3             LoadGlobal [1]
05d1       1             Literal(lit undefined)
05d2       1             LoadVar(index 0)
05d3       3             Literal(&0114)
05d6       2             Call(count 3)
05d8       1             Pop(count 1)
05d9       1             Pop(count 1)
05da       1             Literal(lit undefined)
05db       1             Return()
05dc   19  -         # Block block16
05dc       1             LoadVar(index 0)
05dd       1             LoadVar(index 1)
05de       1             BinOp(op '+')
05df       1             LoadVar(index 2)
05e0       1             StoreVar(index 0)
05e1       1             Pop(count 1)
05e2       4             StartTry(&063c)
05e6       1             LoadVar(index 0)
05e7       3             Literal(&00c4)
05ea       1             BinOp(op '+')
05eb       1             LoadVar(index 4)
05ec       1             StoreVar(index 0)
05ed       1             Pop(count 1)
05ee       1             LoadVar(index 1)
05ef       1             Literal(lit 3)
05f0       1             BinOp(op '%')
05f1       1             Literal(lit 0)
05f2       1             BinOp(op '===')
05f3       2             Branch &060e
05f5    f  -         # Block block18
05f5       1             LoadVar(index 0)
05f6       3             Literal(&00d0)
05f9       1             BinOp(op '+')
05fa       1             LoadVar(index 4)
05fb       1             StoreVar(index 0)
05fc       1             Pop(count 1)
05fd       1             LoadVar(index 1)
05fe       1             Literal(lit 3)
05ff       1             BinOp(op '%')
0600       1             Literal(lit 1)
0601       1             BinOp(op '!==')
0602       2             Branch &0618
0604    a  -         # Block block20
0604       1             LoadVar(index 0)
0605       3             Literal(&00ec)
0608       1             BinOp(op '+')
0609       1             LoadVar(index 4)
060a       1             StoreVar(index 0)
060b       1             Pop(count 1)
060c       1             Literal(lit 2)
060d       1             Throw()
060e    a  -         # Block block17
060e       1             LoadVar(index 0)
060f       3             Literal(&00dc)
0612       1             BinOp(op '+')
0613       1             LoadVar(index 4)
0614       1             StoreVar(index 0)
0615       1             Pop(count 1)
0616       1             Literal(lit 1)
0617       1             Throw()
0618   12  -         # Block block19
0618       1             LoadVar(index 0)
0619       3             Literal(&00e8)
061c       1             BinOp(op '+')
061d       1             LoadVar(index 4)
061e       1             StoreVar(index 0)
061f       1             Pop(count 1)
0620       1             LoadVar(index 0)
0621       3             Literal(&010c)
0624       1             BinOp(op '+')
0625       1             LoadVar(index 4)
0626       1             StoreVar(index 0)
0627       1             Pop(count 1)
0628       2             EndTry()
062a       0             <implicit fallthrough>
062a   12  -         # Block block23
062a       1             LoadVar(index 0)
062b       3             Literal(&0110)
062e       1             BinOp(op '+')
062f       1             LoadVar(index 2)
0630       1             StoreVar(index 0)
0631       1             Pop(count 1)
0632       1             LoadVar(index 1)
0633       1             LoadVar(index 2)
0634       1             Literal(lit 1)
0635       1             BinOp(op '+')
0636       1             LoadVar(index 3)
0637       1             StoreVar(index 1)
0638       1             Pop(count 1)
0639       1             Pop(count 1)
063a       2             Jump &05c8
063c    b  -         # Block block22
063c       1             Pop(count 1)
063d       1             LoadVar(index 0)
063e       3             Literal(&00f0)
0641       1             BinOp(op '+')
0642       1             LoadVar(index 2)
0643       1             StoreVar(index 0)
0644       1             Pop(count 1)
0645       2             Jump &062a
0647       3     <unused>
064a       2     Header [Size: 8, Type: TC_REF_FUNCTION]
064c   34  -     # Function test_exceptionParameter
064c       0         maxStackDepth: 8
064c       0         isContinuation: 0
064c   18  -         # Block entry
064c       1             Literal(lit undefined)
064d       1             Literal(lit undefined)
064e       3             Literal(deleted)
0651       1             Literal(lit 1)
0652       1             StoreVar(index 2)
0653       1             Literal(lit undefined)
0654       1             StoreVar(index 0)
0655       4             StartTry(&0664)
0659       3             Literal(deleted)
065c       1             Literal(lit undefined)
065d       1             StoreVar(index 5)
065e       1             Literal(lit undefined)
065f       1             StoreVar(index 1)
0660       3             Literal(42)
0663       1             Throw()
0664   1c  -         # Block block25
0664       1             Literal(lit undefined)
0665       3             Literal(deleted)
0668       1             Literal(lit undefined)
0669       1             StoreVar(index 5)
066a       1             Literal(lit undefined)
066b       1             StoreVar(index 4)
066c       1             LoadVar(index 3)
066d       1             LoadVar(index 6)
066e       1             StoreVar(index 2)
066f       1             Pop(count 1)
0670       2             Pop(count 3)
0672       3             LoadGlobal [1]
0675       1             Literal(lit undefined)
0676       1             LoadVar(index 2)
0677       3             Literal(42)
067a       2             Call(count 3)
067c       1             Pop(count 1)
067d       1             Pop(count 1)
067e       1             Literal(lit undefined)
067f       1             Return()
0680       2     <unused>
0682       2     Header [Size: 8, Type: TC_REF_FUNCTION]
0684   55  -     # Function test_exceptionParameterWithClosure
0684       0         maxStackDepth: 8
0684       0         isContinuation: 0
0684   1f  -         # Block entry
0684       2             ScopeNew(count 2)
0686       1             Literal(lit undefined)
0687       1             Literal(lit undefined)
0688       3             Literal(deleted)
068b       3             Literal(deleted)
068e       1             Literal(lit 1)
068f       1             StoreVar(index 2)
0690       1             Literal(lit undefined)
0691       1             StoreVar(index 3)
0692       1             Literal(lit undefined)
0693       1             StoreVar(index 0)
0694       4             StartTry(&06a4)
0698       3             Literal(deleted)
069b       1             Literal(lit undefined)
069c       1             StoreVar(index 6)
069d       1             Literal(lit undefined)
069e       1             StoreVar(index 1)
069f       3             Literal(42)
06a2       1             Throw()
06a3       1         <unused>
06a4   35  -         # Block block27
06a4       1             StoreScoped [1]
06a5       1             Literal(lit undefined)
06a6       3             Literal(deleted)
06a9       1             Literal(lit undefined)
06aa       1             StoreVar(index 5)
06ab       1             Literal(lit undefined)
06ac       1             StoreVar(index 4)
06ad       1             LoadScoped [1]
06ae       1             LoadVar(index 6)
06af       1             StoreVar(index 2)
06b0       1             Pop(count 1)
06b1       3             Literal(&06dc)
06b4       1             StoreScoped [0]
06b5       2             LoadReg('closure')
06b7       1             LoadVar(index 6)
06b8       1             StoreVar(index 3)
06b9       1             Pop(count 1)
06ba       2             Pop(count 2)
06bc       3             LoadGlobal [1]
06bf       1             Literal(lit undefined)
06c0       1             LoadVar(index 2)
06c1       3             Literal(42)
06c4       2             Call(count 3)
06c6       1             Pop(count 1)
06c7       3             LoadGlobal [1]
06ca       1             Literal(lit undefined)
06cb       1             LoadVar(index 3)
06cc       1             Literal(lit undefined)
06cd       2             Call(count 1)
06cf       3             Literal(42)
06d2       2             Call(count 3)
06d4       1             Pop(count 1)
06d5       2             Pop(count 2)
06d7       1             Literal(lit undefined)
06d8       1             Return()
06d9       1     <unused>
06da       2     Header [Size: 1, Type: TC_REF_FUNCTION]
06dc    2  -     # Function anonymous
06dc       0         maxStackDepth: 1
06dc       0         isContinuation: 0
06dc    2  -         # Block entry
06dc       1             LoadScoped [1]
06dd       1             Return()
06de       2     Header [Size: 8, Type: TC_REF_FUNCTION]
06e0   2a  -     # Function test_rethrow
06e0       0         maxStackDepth: 8
06e0       0         isContinuation: 0
06e0   12  -         # Block entry
06e0       4             StartTry(&06f8)
06e4       4             StartTry(&06f2)
06e8       1             ObjectNew()
06e9       1             LoadVar(index 4)
06ea       3             Literal(&0130)
06ed       3             Literal(&00c8)
06f0       1             ObjectSet()
06f1       1             Throw()
06f2    2  -         # Block block29
06f2       1             LoadVar(index 2)
06f3       1             Throw()
06f4       2         <unused>
06f6    2  -         # Block block32
06f6       1             Literal(lit undefined)
06f7       1             Return()
06f8   12  -         # Block block31
06f8       3             LoadGlobal [1]
06fb       1             Literal(lit undefined)
06fc       1             LoadVar(index 0)
06fd       3             Literal(&0130)
0700       1             ObjectGet()
0701       3             Literal(&00c8)
0704       2             Call(count 3)
0706       1             Pop(count 1)
0707       1             Pop(count 1)
0708       2             Jump &06f6
070a       2     Header [Size: 7, Type: TC_REF_FUNCTION]
070c   67  -     # Function test_breakOutOfTry
070c       0         maxStackDepth: 7
070c       0         isContinuation: 0
070c    c  -         # Block entry
070c       3             Literal(deleted)
070f       3             Literal(&013c)
0712       1             StoreVar(index 0)
0713       3             Literal(deleted)
0716       1             Literal(lit 0)
0717       1             StoreVar(index 1)
0718       0             <implicit fallthrough>
0718    7  -         # Block block33
0718       1             LoadVar(index 1)
0719       3             Literal(100)
071c       1             BinOp(op '<')
071d       2             Branch &072e
071f    f  -         # Block block39
071f       1             Pop(count 1)
0720       3             LoadGlobal [1]
0723       1             Literal(lit undefined)
0724       1             LoadVar(index 0)
0725       3             Literal(&0170)
0728       2             Call(count 3)
072a       1             Pop(count 1)
072b       1             Pop(count 1)
072c       1             Literal(lit undefined)
072d       1             Return()
072e   13  -         # Block block34
072e       1             LoadVar(index 0)
072f       3             Literal(&0144)
0732       1             LoadVar(index 1)
0733       1             BinOp(op '+')
0734       1             BinOp(op '+')
0735       1             LoadVar(index 2)
0736       1             StoreVar(index 0)
0737       1             Pop(count 1)
0738       4             StartTry(&0768)
073c       1             LoadVar(index 1)
073d       1             Literal(lit 2)
073e       1             BinOp(op '===')
073f       2             Branch &0755
0741    2  -         # Block block36
0741       2             EndTry()
0743       0             <implicit fallthrough>
0743   12  -         # Block block38
0743       1             LoadVar(index 0)
0744       3             Literal(&0164)
0747       1             BinOp(op '+')
0748       1             LoadVar(index 2)
0749       1             StoreVar(index 0)
074a       1             Pop(count 1)
074b       1             LoadVar(index 1)
074c       1             LoadVar(index 2)
074d       1             Literal(lit 1)
074e       1             BinOp(op '+')
074f       1             LoadVar(index 3)
0750       1             StoreVar(index 1)
0751       1             Pop(count 1)
0752       1             Pop(count 1)
0753       2             Jump &0718
0755   12  -         # Block block35
0755       3             Literal(deleted)
0758       1             Literal(lit undefined)
0759       1             StoreVar(index 4)
075a       1             LoadVar(index 0)
075b       3             Literal(&014c)
075e       1             BinOp(op '+')
075f       1             LoadVar(index 5)
0760       1             StoreVar(index 0)
0761       1             Pop(count 1)
0762       1             Pop(count 1)
0763       2             EndTry()
0765       2             Jump &071f
0767       1         <unused>
0768    b  -         # Block block37
0768       1             Pop(count 1)
0769       1             LoadVar(index 0)
076a       3             Literal(&0158)
076d       1             BinOp(op '+')
076e       1             LoadVar(index 2)
076f       1             StoreVar(index 0)
0770       1             Pop(count 1)
0771       2             Jump &0743
0773       3     <unused>
0776       2     Header [Size: 6, Type: TC_REF_FUNCTION]
0778   75  -     # Function test_breakOutOfTryWithClosure
0778       0         maxStackDepth: 6
0778       0         isContinuation: 0
0778    b  -         # Block entry
0778       3             Literal(deleted)
077b       3             Literal(&013c)
077e       1             StoreVar(index 0)
077f       2             ScopeNew(count 1)
0781       1             Literal(lit 0)
0782       1             StoreScoped [0]
0783       0             <implicit fallthrough>
0783    7  -         # Block block40
0783       1             LoadScoped [0]
0784       3             Literal(100)
0787       1             BinOp(op '<')
0788       2             Branch &0799
078a    f  -         # Block block46
078a       1             ScopeDiscard
078b       3             LoadGlobal [1]
078e       1             Literal(lit undefined)
078f       1             LoadVar(index 0)
0790       3             Literal(&0170)
0793       2             Call(count 3)
0795       1             Pop(count 1)
0796       1             Pop(count 1)
0797       1             Literal(lit undefined)
0798       1             Return()
0799   1d  -         # Block block41
0799       3             ScopePush(2)
079c       1             LoadVar(index 0)
079d       3             Literal(&0144)
07a0       1             LoadScoped [2]
07a1       1             BinOp(op '+')
07a2       1             BinOp(op '+')
07a3       1             LoadVar(index 1)
07a4       1             StoreVar(index 0)
07a5       1             Pop(count 1)
07a6       3             Literal(&07f0)
07a9       1             StoreScoped [0]
07aa       2             LoadReg('closure')
07ac       1             Pop(count 1)
07ad       4             StartTry(&07e2)
07b1       1             LoadScoped [2]
07b2       1             Literal(lit 2)
07b3       1             BinOp(op '===')
07b4       2             Branch &07cd
07b6    2  -         # Block block43
07b6       2             EndTry()
07b8       0             <implicit fallthrough>
07b8   15  -         # Block block45
07b8       1             LoadVar(index 0)
07b9       3             Literal(&0164)
07bc       1             BinOp(op '+')
07bd       1             LoadVar(index 1)
07be       1             StoreVar(index 0)
07bf       1             Pop(count 1)
07c0       2             ScopePop
07c2       1             ScopeClone
07c3       1             LoadScoped [0]
07c4       1             LoadVar(index 1)
07c5       1             Literal(lit 1)
07c6       1             BinOp(op '+')
07c7       1             LoadVar(index 2)
07c8       1             StoreScoped [0]
07c9       1             Pop(count 1)
07ca       1             Pop(count 1)
07cb       2             Jump &0783
07cd   14  -         # Block block42
07cd       3             Literal(deleted)
07d0       1             Literal(lit undefined)
07d1       1             StoreVar(index 3)
07d2       1             LoadVar(index 0)
07d3       3             Literal(&014c)
07d6       1             BinOp(op '+')
07d7       1             LoadVar(index 4)
07d8       1             StoreVar(index 0)
07d9       1             Pop(count 1)
07da       1             Pop(count 1)
07db       2             EndTry()
07dd       2             ScopePop
07df       2             Jump &078a
07e1       1         <unused>
07e2    b  -         # Block block44
07e2       1             Pop(count 1)
07e3       1             LoadVar(index 0)
07e4       3             Literal(&0158)
07e7       1             BinOp(op '+')
07e8       1             LoadVar(index 1)
07e9       1             StoreVar(index 0)
07ea       1             Pop(count 1)
07eb       2             Jump &07b8
07ed       1     <unused>
07ee       2     Header [Size: 1, Type: TC_REF_FUNCTION]
07f0    2  -     # Function anonymous1
07f0       0         maxStackDepth: 1
07f0       0         isContinuation: 0
07f0    2  -         # Block entry
07f0       1             LoadScoped [2]
07f1       1             Return()
07f2       2     Header [Size: 20, Type: TC_REF_FUNCTION]
07f4   af  -     # Function test_breakOutOfCatch
07f4       0         maxStackDepth: 20
07f4       0         isContinuation: 0
07f4   14  -         # Block entry
07f4       1             Literal(lit undefined)
07f5       1             Literal(lit undefined)
07f6       1             Literal(lit undefined)
07f7       1             Literal(lit undefined)
07f8       1             Literal(lit undefined)
07f9       1             Literal(lit undefined)
07fa       3             Literal(deleted)
07fd       3             Literal(&013c)
0800       1             StoreVar(index 6)
0801       1             Literal(lit undefined)
0802       1             StoreVar(index 0)
0803       3             Literal(deleted)
0806       1             Literal(lit 0)
0807       1             StoreVar(index 7)
0808       0             <implicit fallthrough>
0808    7  -         # Block block47
0808       1             LoadVar(index 7)
0809       3             Literal(100)
080c       1             BinOp(op '<')
080d       2             Branch &081e
080f    f  -         # Block block55
080f       1             Pop(count 1)
0810       3             LoadGlobal [1]
0813       1             Literal(lit undefined)
0814       1             LoadVar(index 6)
0815       3             Literal(&01bc)
0818       2             Call(count 3)
081a       1             Pop(count 1)
081b       1             Pop(count 1)
081c       1             Literal(lit undefined)
081d       1             Return()
081e   2c  -         # Block block48
081e       3             Literal(deleted)
0821       1             LoadVar(index 6)
0822       3             Literal(&0144)
0825       1             LoadVar(index 7)
0826       1             BinOp(op '+')
0827       1             BinOp(op '+')
0828       1             LoadVar(index 9)
0829       1             StoreVar(index 6)
082a       1             Pop(count 1)
082b       1             Literal(lit undefined)
082c       1             StoreVar(index 8)
082d       1             Literal(lit undefined)
082e       1             StoreVar(index 1)
082f       4             StartTry(&0894)
0833       3             Literal(deleted)
0836       1             Literal(lit undefined)
0837       1             StoreVar(index 11)
0838       1             Literal(lit undefined)
0839       1             StoreVar(index 2)
083a       4             StartTry(&087c)
083e       3             Literal(deleted)
0841       1             Literal(lit undefined)
0842       1             StoreVar(index 14)
0843       1             Literal(lit undefined)
0844       1             StoreVar(index 3)
0845       1             LoadVar(index 7)
0846       1             Literal(lit 2)
0847       1             BinOp(op '===')
0848       2             Branch &0863
084a    4  -         # Block block50
084a       2             EndTry()
084c       2             EndTry()
084e       0             <implicit fallthrough>
084e   15  -         # Block block54
084e       1             Literal(lit undefined)
084f       1             StoreVar(index 5)
0850       1             LoadVar(index 6)
0851       3             Literal(&0164)
0854       1             BinOp(op '+')
0855       1             LoadVar(index 9)
0856       1             StoreVar(index 6)
0857       1             Pop(count 1)
0858       1             Pop(count 1)
0859       1             LoadVar(index 7)
085a       1             LoadVar(index 8)
085b       1             Literal(lit 1)
085c       1             BinOp(op '+')
085d       1             LoadVar(index 9)
085e       1             StoreVar(index 7)
085f       1             Pop(count 1)
0860       1             Pop(count 1)
0861       2             Jump &0808
0863   19  -         # Block block49
0863       3             Literal(deleted)
0866       1             Literal(lit undefined)
0867       1             StoreVar(index 15)
0868       1             Literal(lit undefined)
0869       1             StoreVar(index 4)
086a       1             LoadVar(index 6)
086b       3             Literal(&0198)
086e       1             BinOp(op '+')
086f       1             LoadVar(index 16)
0870       1             StoreVar(index 6)
0871       1             Pop(count 1)
0872       1             ObjectNew()
0873       1             LoadVar(index 16)
0874       3             Literal(&0130)
0877       3             Literal(&00c8)
087a       1             ObjectSet()
087b       1             Throw()
087c   18  -         # Block block51
087c       1             Literal(lit undefined)
087d       3             Literal(deleted)
0880       1             Literal(lit undefined)
0881       1             StoreVar(index 14)
0882       1             Literal(lit undefined)
0883       1             StoreVar(index 13)
0884       1             LoadVar(index 6)
0885       3             Literal(&01a4)
0888       1             BinOp(op '+')
0889       1             LoadVar(index 15)
088a       1             StoreVar(index 6)
088b       1             Pop(count 1)
088c       2             Pop(count 3)
088e       2             EndTry()
0890       1             Pop(count 1)
0891       3             Jump &080f
0894    f  -         # Block block53
0894       1             Literal(lit undefined)
0895       1             Literal(lit undefined)
0896       1             StoreVar(index 10)
0897       1             LoadVar(index 6)
0898       3             Literal(&01b0)
089b       1             BinOp(op '+')
089c       1             LoadVar(index 11)
089d       1             StoreVar(index 6)
089e       1             Pop(count 1)
089f       2             Pop(count 2)
08a1       2             Jump &084e
08a3       3     <unused>
08a6       2     Header [Size: 8, Type: TC_REF_FUNCTION]
08a8   85  -     # Function test_breakOutOfDoubleCatch
08a8       0         maxStackDepth: 8
08a8       0         isContinuation: 0
08a8    c  -         # Block entry
08a8       3             Literal(deleted)
08ab       3             Literal(&013c)
08ae       1             StoreVar(index 0)
08af       3             Literal(deleted)
08b2       1             Literal(lit 0)
08b3       1             StoreVar(index 1)
08b4       0             <implicit fallthrough>
08b4    7  -         # Block block56
08b4       1             LoadVar(index 1)
08b5       3             Literal(100)
08b8       1             BinOp(op '<')
08b9       2             Branch &08ca
08bb    f  -         # Block block64
08bb       1             Pop(count 1)
08bc       3             LoadGlobal [1]
08bf       1             Literal(lit undefined)
08c0       1             LoadVar(index 0)
08c1       3             Literal(&01f4)
08c4       2             Call(count 3)
08c6       1             Pop(count 1)
08c7       1             Pop(count 1)
08c8       1             Literal(lit undefined)
08c9       1             Return()
08ca   27  -         # Block block57
08ca       1             LoadVar(index 0)
08cb       3             Literal(&0144)
08ce       1             LoadVar(index 1)
08cf       1             BinOp(op '+')
08d0       1             BinOp(op '+')
08d1       1             LoadVar(index 2)
08d2       1             StoreVar(index 0)
08d3       1             Pop(count 1)
08d4       4             StartTry(&0922)
08d8       1             LoadVar(index 0)
08d9       3             Literal(&01ec)
08dc       1             BinOp(op '+')
08dd       1             LoadVar(index 4)
08de       1             StoreVar(index 0)
08df       1             Pop(count 1)
08e0       4             StartTry(&0914)
08e4       1             LoadVar(index 0)
08e5       3             Literal(&01ec)
08e8       1             BinOp(op '+')
08e9       1             LoadVar(index 6)
08ea       1             StoreVar(index 0)
08eb       1             Pop(count 1)
08ec       1             LoadVar(index 1)
08ed       1             Literal(lit 1)
08ee       1             BinOp(op '===')
08ef       2             Branch &0907
08f1    4  -         # Block block59
08f1       2             EndTry()
08f3       2             EndTry()
08f5       0             <implicit fallthrough>
08f5   12  -         # Block block63
08f5       1             LoadVar(index 0)
08f6       3             Literal(&0164)
08f9       1             BinOp(op '+')
08fa       1             LoadVar(index 2)
08fb       1             StoreVar(index 0)
08fc       1             Pop(count 1)
08fd       1             LoadVar(index 1)
08fe       1             LoadVar(index 2)
08ff       1             Literal(lit 1)
0900       1             BinOp(op '+')
0901       1             LoadVar(index 3)
0902       1             StoreVar(index 1)
0903       1             Pop(count 1)
0904       1             Pop(count 1)
0905       2             Jump &08b4
0907    c  -         # Block block58
0907       1             LoadVar(index 0)
0908       3             Literal(&0198)
090b       1             BinOp(op '+')
090c       1             LoadVar(index 6)
090d       1             StoreVar(index 0)
090e       1             Pop(count 1)
090f       3             Literal(&00a0)
0912       1             Throw()
0913       1         <unused>
0914    d  -         # Block block60
0914       1             LoadVar(index 0)
0915       3             Literal(&01a4)
0918       1             BinOp(op '+')
0919       1             LoadVar(index 5)
091a       1             StoreVar(index 0)
091b       1             Pop(count 1)
091c       1             Pop(count 1)
091d       2             EndTry()
091f       2             Jump &08bb
0921       1         <unused>
0922    b  -         # Block block62
0922       1             Pop(count 1)
0923       1             LoadVar(index 0)
0924       3             Literal(&01b0)
0927       1             BinOp(op '+')
0928       1             LoadVar(index 2)
0929       1             StoreVar(index 0)
092a       1             Pop(count 1)
092b       2             Jump &08f5
092d       1     <unused>
092e       2     Header [Size: 5, Type: TC_REF_FUNCTION]
0930   31  -     # Function test_returnFromTry
0930       0         maxStackDepth: 5
0930       0         isContinuation: 0
0930   19  -         # Block entry
0930       2             ScopeNew(count 2)
0932       3             Literal(&0964)
0935       1             StoreScoped [0]
0936       2             LoadReg('closure')
0938       3             Literal(&013c)
093b       1             StoreScoped [1]
093c       4             StartTry(&094a)
0940       1             LoadVar(index 0)
0941       1             Literal(lit undefined)
0942       2             Call(count 1)
0944       1             Pop(count 1)
0945       3             Literal(&0228)
0948       1             Throw()
0949       1         <unused>
094a   17  -         # Block block67
094a       1             LoadScoped [1]
094b       3             Literal(&0238)
094e       1             BinOp(op '+')
094f       1             LoadVar(index 2)
0950       1             StoreScoped [1]
0951       1             Pop(count 1)
0952       1             Pop(count 1)
0953       3             LoadGlobal [1]
0956       1             Literal(lit undefined)
0957       1             LoadScoped [1]
0958       3             Literal(&0248)
095b       2             Call(count 3)
095d       1             Pop(count 1)
095e       1             Pop(count 1)
095f       1             Literal(lit undefined)
0960       1             Return()
0961       1     <unused>
0962       2     Header [Size: 7, Type: TC_REF_FUNCTION]
0964   54  -     # Function test_returnFromTry_inner
0964       0         maxStackDepth: 7
0964       0         isContinuation: 0
0964   37  -         # Block entry
0964       3             ScopePush(3)
0967       1             Literal(lit undefined)
0968       1             Literal(lit undefined)
0969       1             LoadScoped [4]
096a       3             Literal(&0274)
096d       1             BinOp(op '+')
096e       1             LoadVar(index 2)
096f       1             StoreScoped [4]
0970       1             Pop(count 1)
0971       1             Literal(lit undefined)
0972       1             StoreVar(index 0)
0973       1             Literal(lit undefined)
0974       1             StoreScoped [1]
0975       3             Literal(&09bc)
0978       1             StoreScoped [0]
0979       2             LoadReg('closure')
097b       1             Pop(count 1)
097c       4             StartTry(&099c)
0980       3             Literal(deleted)
0983       1             LoadScoped [4]
0984       3             Literal(&0280)
0987       1             BinOp(op '+')
0988       1             LoadVar(index 5)
0989       1             StoreScoped [4]
098a       1             Pop(count 1)
098b       1             Literal(lit undefined)
098c       1             StoreVar(index 1)
098d       1             Literal(lit undefined)
098e       1             StoreVar(index 4)
098f       1             LoadScoped [4]
0990       3             Literal(&0290)
0993       1             BinOp(op '+')
0994       1             LoadVar(index 5)
0995       1             StoreScoped [4]
0996       1             Pop(count 1)
0997       2             EndTry()
0999       1             Literal(lit undefined)
099a       1             Return()
099b       1         <unused>
099c   1c  -         # Block block65
099c       1             Literal(lit undefined)
099d       3             Literal(deleted)
09a0       1             LoadScoped [4]
09a1       3             Literal(&029c)
09a4       1             BinOp(op '+')
09a5       1             LoadVar(index 5)
09a6       1             StoreScoped [4]
09a7       1             Pop(count 1)
09a8       1             Literal(lit undefined)
09a9       1             StoreVar(index 3)
09aa       1             Literal(lit undefined)
09ab       1             StoreVar(index 4)
09ac       2             Pop(count 3)
09ae       1             LoadScoped [4]
09af       3             Literal(&02ac)
09b2       1             BinOp(op '+')
09b3       1             LoadVar(index 2)
09b4       1             StoreScoped [4]
09b5       1             Pop(count 1)
09b6       1             Literal(lit undefined)
09b7       1             Return()
09b8       2     <unused>
09ba       2     Header [Size: 1, Type: TC_REF_FUNCTION]
09bc    2  -     # Function anonymous2
09bc       0         maxStackDepth: 1
09bc       0         isContinuation: 0
09bc    2  -         # Block entry
09bc       1             LoadScoped [1]
09bd       1             Return()
09be       2     Header [Size: 6, Type: TC_REF_FUNCTION]
09c0   43  -     # Function test_returnInsideNestedTry
09c0       0         maxStackDepth: 6
09c0       0         isContinuation: 0
09c0   2a  -         # Block entry
09c0       2             ScopeNew(count 2)
09c2       3             Literal(&0a08)
09c5       1             StoreScoped [0]
09c6       2             LoadReg('closure')
09c8       3             Literal(&013c)
09cb       1             StoreScoped [1]
09cc       4             StartTry(&09ea)
09d0       3             Literal(deleted)
09d3       1             LoadScoped [1]
09d4       3             Literal(&02bc)
09d7       1             BinOp(op '+')
09d8       1             LoadVar(index 4)
09d9       1             StoreScoped [1]
09da       1             Pop(count 1)
09db       1             LoadVar(index 0)
09dc       1             Literal(lit undefined)
09dd       2             Call(count 1)
09df       1             StoreVar(index 3)
09e0       1             LoadScoped [1]
09e1       1             LoadVar(index 3)
09e2       1             BinOp(op '+')
09e3       1             LoadVar(index 4)
09e4       1             StoreScoped [1]
09e5       1             Pop(count 1)
09e6       3             Literal(&02c4)
09e9       1             Throw()
09ea   19  -         # Block block73
09ea       1             LoadScoped [1]
09eb       3             Literal(&01a4)
09ee       1             LoadVar(index 1)
09ef       1             BinOp(op '+')
09f0       1             BinOp(op '+')
09f1       1             LoadVar(index 2)
09f2       1             StoreScoped [1]
09f3       1             Pop(count 1)
09f4       1             Pop(count 1)
09f5       3             LoadGlobal [1]
09f8       1             Literal(lit undefined)
09f9       1             LoadScoped [1]
09fa       3             Literal(&02d0)
09fd       2             Call(count 3)
09ff       1             Pop(count 1)
0a00       1             Pop(count 1)
0a01       1             Literal(lit undefined)
0a02       1             Return()
0a03       3     <unused>
0a06       2     Header [Size: 6, Type: TC_REF_FUNCTION]
0a08   49  -     # Function inner
0a08       0         maxStackDepth: 6
0a08       0         isContinuation: 0
0a08   28  -         # Block entry
0a08       1             LoadScoped [1]
0a09       3             Literal(&0274)
0a0c       1             BinOp(op '+')
0a0d       1             LoadVar(index 0)
0a0e       1             StoreScoped [1]
0a0f       1             Pop(count 1)
0a10       4             StartTry(&0a46)
0a14       1             LoadScoped [1]
0a15       3             Literal(&0304)
0a18       1             BinOp(op '+')
0a19       1             LoadVar(index 2)
0a1a       1             StoreScoped [1]
0a1b       1             Pop(count 1)
0a1c       4             StartTry(&0a30)
0a20       1             LoadScoped [1]
0a21       3             Literal(&030c)
0a24       1             BinOp(op '+')
0a25       1             LoadVar(index 4)
0a26       1             StoreScoped [1]
0a27       1             Pop(count 1)
0a28       2             EndTry()
0a2a       2             EndTry()
0a2c       3             Literal(&0314)
0a2f       1             Return()
0a30    b  -         # Block block69
0a30       1             LoadScoped [1]
0a31       3             Literal(&0320)
0a34       1             BinOp(op '+')
0a35       1             LoadVar(index 3)
0a36       1             StoreScoped [1]
0a37       1             Pop(count 1)
0a38       1             Pop(count 1)
0a39       2             EndTry()
0a3b       0             <implicit fallthrough>
0a3b    a  -         # Block block72
0a3b       1             LoadScoped [1]
0a3c       3             Literal(&032c)
0a3f       1             BinOp(op '+')
0a40       1             LoadVar(index 0)
0a41       1             StoreScoped [1]
0a42       1             Pop(count 1)
0a43       1             Literal(lit undefined)
0a44       1             Return()
0a45       1         <unused>
0a46    b  -         # Block block71
0a46       1             LoadScoped [1]
0a47       3             Literal(&01b0)
0a4a       1             BinOp(op '+')
0a4b       1             LoadVar(index 1)
0a4c       1             StoreScoped [1]
0a4d       1             Pop(count 1)
0a4e       1             Pop(count 1)
0a4f       2             Jump &0a3b
0a51       1     <unused>
0a52       2     Header [Size: 6, Type: TC_REF_FUNCTION]
0a54   43  -     # Function test_returnInsideNestedCatch
0a54       0         maxStackDepth: 6
0a54       0         isContinuation: 0
0a54   2a  -         # Block entry
0a54       2             ScopeNew(count 2)
0a56       3             Literal(&0a9c)
0a59       1             StoreScoped [0]
0a5a       2             LoadReg('closure')
0a5c       3             Literal(&013c)
0a5f       1             StoreScoped [1]
0a60       4             StartTry(&0a7e)
0a64       3             Literal(deleted)
0a67       1             LoadScoped [1]
0a68       3             Literal(&02bc)
0a6b       1             BinOp(op '+')
0a6c       1             LoadVar(index 4)
0a6d       1             StoreScoped [1]
0a6e       1             Pop(count 1)
0a6f       1             LoadVar(index 0)
0a70       1             Literal(lit undefined)
0a71       2             Call(count 1)
0a73       1             StoreVar(index 3)
0a74       1             LoadScoped [1]
0a75       1             LoadVar(index 3)
0a76       1             BinOp(op '+')
0a77       1             LoadVar(index 4)
0a78       1             StoreScoped [1]
0a79       1             Pop(count 1)
0a7a       3             Literal(&0334)
0a7d       1             Throw()
0a7e   19  -         # Block block79
0a7e       1             LoadScoped [1]
0a7f       1             LoadVar(index 1)
0a80       3             Literal(&01a4)
0a83       1             BinOp(op '+')
0a84       1             BinOp(op '+')
0a85       1             LoadVar(index 2)
0a86       1             StoreScoped [1]
0a87       1             Pop(count 1)
0a88       1             Pop(count 1)
0a89       3             LoadGlobal [1]
0a8c       1             Literal(lit undefined)
0a8d       1             LoadScoped [1]
0a8e       3             Literal(&0340)
0a91       2             Call(count 3)
0a93       1             Pop(count 1)
0a94       1             Pop(count 1)
0a95       1             Literal(lit undefined)
0a96       1             Return()
0a97       3     <unused>
0a9a       2     Header [Size: 5, Type: TC_REF_FUNCTION]
0a9c   40  -     # Function inner1
0a9c       0         maxStackDepth: 5
0a9c       0         isContinuation: 0
0a9c   18  -         # Block entry
0a9c       1             LoadScoped [1]
0a9d       3             Literal(&0274)
0aa0       1             BinOp(op '+')
0aa1       1             LoadVar(index 0)
0aa2       1             StoreScoped [1]
0aa3       1             Pop(count 1)
0aa4       4             StartTry(&0ab4)
0aa8       1             LoadScoped [1]
0aa9       3             Literal(&0304)
0aac       1             BinOp(op '+')
0aad       1             LoadVar(index 2)
0aae       1             StoreScoped [1]
0aaf       1             Pop(count 1)
0ab0       3             Literal(&0390)
0ab3       1             Throw()
0ab4   1a  -         # Block block75
0ab4       1             LoadScoped [1]
0ab5       1             LoadVar(index 0)
0ab6       3             Literal(&01b0)
0ab9       1             BinOp(op '+')
0aba       1             BinOp(op '+')
0abb       1             LoadVar(index 1)
0abc       1             StoreScoped [1]
0abd       1             Pop(count 1)
0abe       4             StartTry(&0ace)
0ac2       1             LoadScoped [1]
0ac3       3             Literal(&030c)
0ac6       1             BinOp(op '+')
0ac7       1             LoadVar(index 3)
0ac8       1             StoreScoped [1]
0ac9       1             Pop(count 1)
0aca       3             Literal(&039c)
0acd       1             Throw()
0ace    e  -         # Block block76
0ace       1             LoadScoped [1]
0acf       1             LoadVar(index 1)
0ad0       3             Literal(&0320)
0ad3       1             BinOp(op '+')
0ad4       1             BinOp(op '+')
0ad5       1             LoadVar(index 2)
0ad6       1             StoreScoped [1]
0ad7       1             Pop(count 1)
0ad8       3             Literal(&0314)
0adb       1             Return()
0adc      14 <unused>
0af0   2e  - # Globals
0af0       2     [0]: &03ac
0af2       2     [1]: &03b0
0af4       2     [2]: &0440
0af6       2     [3]: &0450
0af8       2     [4]: &0484
0afa       2     [5]: &04c0
0afc       2     [6]: &0510
0afe       2     [7]: &056c
0b00       2     [8]: &05bc
0b02       2     [9]: &064c
0b04       2     [10]: &0684
0b06       2     [11]: &06e0
0b08       2     [12]: &070c
0b0a       2     [13]: &0778
0b0c       2     [14]: &07f4
0b0e       2     [15]: &08a8
0b10       2     [16]: &0930
0b12       2     [17]: &09c0
0b14       2     [18]: &0a54
0b16       2     [19]: deleted
0b18       2     Handle: &0b20
0b1a       2     Handle: deleted
0b1c       2     Handle: undefined
0b1e    a  - # GC allocations
0b1e       2     Header [Size: 8, Type: TC_REF_PROPERTY_LIST]
0b20    8  -     # TsPropertyList
0b20       2         dpNext: null
0b22       2         dpProto: null
0b24       2         key: &0098
0b26       2         value: &03b4