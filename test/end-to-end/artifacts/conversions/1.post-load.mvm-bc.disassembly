Bytecode size: 302 B

Ofst Addr    Size
==== ==== =======
0000        44  - # Header
0000            1     bytecodeVersion: 1
0001            1     headerSize: 44
0002            2     bytecodeSize: 302
0004            2     expectedCRC: 8c77
0006            2     requiredEngineVersion: 0
0008            4     requiredFeatureFlags: 1
000c            2     globalVariableCount: 5
000e            2     initialDataOffset: 002c
0010            2     initialDataSize: 10
0012            2     initialHeapOffset: 0036
0014            2     initialHeapSize: 10
0016            2     gcRootsOffset: 0040
0018            2     gcRootsCount: 0
001a            2     importTableOffset: 0040
001c            2     importTableSize: 4
001e            2     exportTableOffset: 0044
0020            2     exportTableSize: 4
0022            2     shortCallTableOffset: 0048
0024            2     shortCallTableSize: 0
0026            2     stringTableOffset: 0048
0028            2     stringTableSize: 2
002a            2     arrayProtoPointer: null
002c 8000   10  - # Globals
002c 8000       2     [0]: &4002
002e 8002       2     [1]: &c04c
0030 8004       2     [2]: &c050
0032 8006       2     [3]: &c08e
0034 8008       2     [4]: &c0d5
0036 4000   10  - # GC allocations
0036 4000       2     Header [Size: 2, Type: TC_REF_PROPERTY_LIST]
0038 4002    2  -     # Object as TsPropertyList
0038 4002       2         first: &4004
003a 4004    6  -     # TsPropertyCell
003a 4004       2         next: &0000
003c 4006       2         key: &c054
003e 4008       2         value: &c077
0040 c040    4  - # Import Table
0040 c040       2     [0]: 2
0042 c042       2     [1]: 3
0044 c044    4  - # Export Table
0044 c044       4     [0]: &c07f
0048 c048    2  - # String Table
0048 c048       2     [0]: &c054
004a c04a  228  - # ROM allocations
004a c04a       2     Header [Size: 2, Type: TC_REF_HOST_FUNC]
004c c04c       2     Value: Import Table [0] (&c040)
004e c04e       2     Header [Size: 2, Type: TC_REF_HOST_FUNC]
0050 c050       2     Value: Import Table [1] (&c042)
0052 c052       2     Header [Size: 6, Type: TC_REF_UNIQUE_STRING]
0054 c054       6     Value: 'isNaN'
005a c05a       2     Header [Size: 8, Type: TC_REF_FLOAT64]
005c c05c       8     Value: 1.1
0064 c064       2     Header [Size: 8, Type: TC_REF_FLOAT64]
0066 c066       8     Value: 3.1
006e c06e       2     Header [Size: 1, Type: TC_REF_UNIQUE_STRING]
0070 c070       1     Value: ''
0071 c071       2     Header [Size: 2, Type: TC_REF_UNIQUE_STRING]
0073 c073       2     Value: 'x'
0075 c075       2     Header [Size: 6, Type: TC_REF_FUNCTION]
0077 c077    6  -     # Function <builtin>:Number_isNaN
0077 c077       1         maxStackDepth: 3
0078 c078    5  -         # Block entry
0078 c078       1             LoadArg(index 1)
0079 c079       1             LoadVar(index 0)
007a c07a       1             LoadVar(index 0)
007b c07b       1             BinOp(op '!==')
007c c07c       1             Return()
007d c07d       2     Header [Size: 13, Type: TC_REF_FUNCTION]
007f c07f   13  -     # Function ./test/end-to-end/tests/conversions.test.mvms:run
007f c07f       1         maxStackDepth: 2
0080 c080   12  -         # Block entry
0080 c080       1             LoadGlobal [3]
0081 c081       1             Literal(lit undefined)
0082 c082       2             Call(count 1)
0084 c084       1             Pop(count 1)
0085 c085       1             LoadGlobal [4]
0086 c086       1             Literal(lit undefined)
0087 c087       2             Call(count 1)
0089 c089       1             Pop(count 1)
008a c08a       1             Literal(lit undefined)
008b c08b       1             Return()
008c c08c       2     Header [Size: 69, Type: TC_REF_FUNCTION]
008e c08e   69  -     # Function ./test/end-to-end/tests/conversions.test.mvms:testConvertToNumber
008e c08e       1         maxStackDepth: 6
008f c08f   68  -         # Block entry
008f c08f       1             LoadGlobal [2]
0090 c090       1             Literal(lit undefined)
0091 c091       1             Literal(lit 1)
0092 c092       1             Literal(lit 1)
0093 c093       1             BinOp(op '+')
0094 c094       1             UnOp(op '+')
0095 c095       1             Literal(lit 2)
0096 c096       2             Call(count 3)
0098 c098       1             Pop(count 1)
0099 c099       1             LoadGlobal [2]
009a c09a       1             Literal(lit undefined)
009b c09b       3             Literal(&c05c)
009e c09e       1             Literal(lit 2)
009f c09f       1             BinOp(op '+')
00a0 c0a0       1             UnOp(op '+')
00a1 c0a1       3             Literal(&c066)
00a4 c0a4       2             Call(count 3)
00a6 c0a6       1             Pop(count 1)
00a7 c0a7       1             LoadGlobal [1]
00a8 c0a8       1             Literal(lit undefined)
00a9 c0a9       1             LoadGlobal [0]
00aa c0aa       1             LoadVar(index 2)
00ab c0ab       3             Literal(&c054)
00ae c0ae       1             ObjectGet()
00af c0af       1             LoadVar(index 2)
00b0 c0b0       1             Literal(lit undefined)
00b1 c0b1       1             UnOp(op '+')
00b2 c0b2       2             Call(count 2)
00b4 c0b4       1             StoreVar(index 2)
00b5 c0b5       2             Call(count 2)
00b7 c0b7       1             Pop(count 1)
00b8 c0b8       1             LoadGlobal [1]
00b9 c0b9       1             Literal(lit undefined)
00ba c0ba       1             LoadGlobal [0]
00bb c0bb       1             LoadVar(index 2)
00bc c0bc       3             Literal(&c054)
00bf c0bf       1             ObjectGet()
00c0 c0c0       1             LoadVar(index 2)
00c1 c0c1       1             ObjectNew()
00c2 c0c2       1             UnOp(op '+')
00c3 c0c3       2             Call(count 2)
00c5 c0c5       1             StoreVar(index 2)
00c6 c0c6       2             Call(count 2)
00c8 c0c8       1             Pop(count 1)
00c9 c0c9       1             LoadGlobal [2]
00ca c0ca       1             Literal(lit undefined)
00cb c0cb       1             Literal(lit null)
00cc c0cc       1             UnOp(op '+')
00cd c0cd       1             Literal(lit 0)
00ce c0ce       2             Call(count 3)
00d0 c0d0       1             Pop(count 1)
00d1 c0d1       1             Literal(lit undefined)
00d2 c0d2       1             Return()
00d3 c0d3       2     Header [Size: 89, Type: TC_REF_FUNCTION]
00d5 c0d5   89  -     # Function ./test/end-to-end/tests/conversions.test.mvms:testConvertToBoolean
00d5 c0d5       1         maxStackDepth: 4
00d6 c0d6   88  -         # Block entry
00d6 c0d6       1             LoadGlobal [2]
00d7 c0d7       1             Literal(lit undefined)
00d8 c0d8       1             Literal(lit 1)
00d9 c0d9       1             UnOp(op '!')
00da c0da       1             UnOp(op '!')
00db c0db       1             Literal(lit true)
00dc c0dc       2             Call(count 3)
00de c0de       1             Pop(count 1)
00df c0df       1             LoadGlobal [2]
00e0 c0e0       1             Literal(lit undefined)
00e1 c0e1       1             Literal(lit 0)
00e2 c0e2       1             UnOp(op '!')
00e3 c0e3       1             UnOp(op '!')
00e4 c0e4       1             Literal(lit false)
00e5 c0e5       2             Call(count 3)
00e7 c0e7       1             Pop(count 1)
00e8 c0e8       1             LoadGlobal [2]
00e9 c0e9       1             Literal(lit undefined)
00ea c0ea       1             Literal(lit -1)
00eb c0eb       1             UnOp(op '!')
00ec c0ec       1             UnOp(op '!')
00ed c0ed       1             Literal(lit true)
00ee c0ee       2             Call(count 3)
00f0 c0f0       1             Pop(count 1)
00f1 c0f1       1             LoadGlobal [2]
00f2 c0f2       1             Literal(lit undefined)
00f3 c0f3       1             Literal(lit undefined)
00f4 c0f4       1             UnOp(op '!')
00f5 c0f5       1             UnOp(op '!')
00f6 c0f6       1             Literal(lit false)
00f7 c0f7       2             Call(count 3)
00f9 c0f9       1             Pop(count 1)
00fa c0fa       1             LoadGlobal [2]
00fb c0fb       1             Literal(lit undefined)
00fc c0fc       1             Literal(lit null)
00fd c0fd       1             UnOp(op '!')
00fe c0fe       1             UnOp(op '!')
00ff c0ff       1             Literal(lit false)
0100 c100       2             Call(count 3)
0102 c102       1             Pop(count 1)
0103 c103       1             LoadGlobal [2]
0104 c104       1             Literal(lit undefined)
0105 c105       1             ObjectNew()
0106 c106       1             UnOp(op '!')
0107 c107       1             UnOp(op '!')
0108 c108       1             Literal(lit true)
0109 c109       2             Call(count 3)
010b c10b       1             Pop(count 1)
010c c10c       1             LoadGlobal [2]
010d c10d       1             Literal(lit undefined)
010e c10e       2             ArrayNew()
0110 c110       1             UnOp(op '!')
0111 c111       1             UnOp(op '!')
0112 c112       1             Literal(lit true)
0113 c113       2             Call(count 3)
0115 c115       1             Pop(count 1)
0116 c116       1             LoadGlobal [2]
0117 c117       1             Literal(lit undefined)
0118 c118       3             Literal(&c070)
011b c11b       1             UnOp(op '!')
011c c11c       1             UnOp(op '!')
011d c11d       1             Literal(lit false)
011e c11e       2             Call(count 3)
0120 c120       1             Pop(count 1)
0121 c121       1             LoadGlobal [2]
0122 c122       1             Literal(lit undefined)
0123 c123       3             Literal(&c073)
0126 c126       1             UnOp(op '!')
0127 c127       1             UnOp(op '!')
0128 c128       1             Literal(lit true)
0129 c129       2             Call(count 3)
012b c12b       1             Pop(count 1)
012c c12c       1             Literal(lit undefined)
012d c12d       1             Return()