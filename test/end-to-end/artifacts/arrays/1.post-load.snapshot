export 0 = &function ['./test/end-to-end/tests/arrays.test.mvms:run'];

slot ['./test/end-to-end/tests/arrays.test.mvms:a'] = &allocation 5;
slot ['./test/end-to-end/tests/arrays.test.mvms:b'] = &allocation 6;
slot ['global:assertEqual'] = host function 3;

function ['./test/end-to-end/tests/arrays.test.mvms:run']() {
  entry:
    LoadGlobal(name 'global:assertEqual');
    Literal(lit undefined);
    LoadGlobal(name './test/end-to-end/tests/arrays.test.mvms:a');
    Literal(lit 'length');
    ObjectGet();
    Literal(lit 0);
    Call(count 3);
    Pop(count 1);
    // assertEqual(a[0], undefined);
    LoadGlobal(name 'global:assertEqual');
    Literal(lit undefined);
    LoadGlobal(name './test/end-to-end/tests/arrays.test.mvms:b');
    Literal(lit 'length');
    ObjectGet();
    Literal(lit 3);
    Call(count 3);
    Pop(count 1);
    Literal(lit undefined);
    Return();
}

allocation 5 = [
];

allocation 6 = [
  1,
  2,
  3,
];