/*---
description: >
  Tests various operations that should classify as vm_TeNumberOp operations
runExportedFunction: 0
assertionCount: 20
---*/
vmExport(0, run);

function run() {
  testSubtraction();
  testMultiplication();
  testDivision();
}

function testSubtraction() {
  assertEqual(3 - 2, 1);
  assertEqual(3_000 - 2_000, 1_000); // out of 8 bit range
  assertEqual(10_000 - 8_000, 2_000); // out of 14 bit signed range
  assertEqual(80_000 - 70_000, 10_000); // out of 16 bit range
  assertEqual(-7_500 - 7_000, -14_500); // underflow 14-bit range
  assertEqual(-2_000_000_000 - 2_000_000_000, overflowChecks ? -4_000_000_000 : 294967296); // underflow signed 32-bit range
  assertEqual(1.5 - 1, 0.5);
  assertEqual(2 - 0.5, 1.5);
  assertEqual(5_000_000_000 - 4_999_999_000, 1_000);
}

function testMultiplication() {
  assertEqual(5 * 6, 30);
  assertEqual(5.5 * 6, 33);
  assertEqual((-5) * (-6), 30);
  assertEqual(5 * (-6), -30);

  assertEqual(5_000 * 5_000, 25_000_000); // Overflow 14-bit range
  assertEqual(17_000 * 2, 34_000);
  assertEqual(5_000_000 * 5_000_000, overflowChecks ? 25_000_000_000_000 : -1004630016); // Overflow 32-bit range
  assertEqual(25_000_000_000_000 * 1, 25_000_000_000_000);
}

function testDivision() {
  // Floating point division (the normal)
  assertEqual(6 / 3, 2);
  assertEqual(7 / 2, 3.5);
  assertEqual(8.5 / 2.5, 3.4);
}