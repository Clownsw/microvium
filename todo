# To do

  - Classes
  - Unit tests should run in both Node and Microvium to test that semantics are identical.
  - `for-of` for arrays (can throw if non-array - just transform to normal `for`)
  - Make all port definitions optional with `ifndef...`
  - FFI library and glue generator, where microvium.c and the port file are part of the generated glue.
  - Runtime measurement of RAM usage
  - Classes
  - JSON parse/stringify library

  - All the TODOs in the code (technical debt)
  - Improve test coverage of C VM
  - Some amount of the builtin JS library (e.g. `Array.map`, etc)
  - Dynamic stack size (expand as needed), so I don't need to keep quoting the stack size as part of the size.
  - Job loop?
  - Add a hash ID to the bytecode file and make a way to create a crash dump to diagnose errors

  - Async-await
  - Start integrating test262
  - Iterators
  - Promises
  - [Handled-promise](https://github.com/tc39/proposal-eventual-send)
  - Top-level await (compile-time await)
  - Variadic calls
  - Symbol type
  - Virtual types and BigInt
  - RegExp
  - Proxy
  - The rest of the builtins, e.g. Date, Map, Set, etc.
